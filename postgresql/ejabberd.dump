--
-- PostgreSQL database dump
--

-- Dumped from database version 10.1
-- Dumped by pg_dump version 10.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;
SET row_security = off;

--
-- Name: pg_stat_statements; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS pg_stat_statements WITH SCHEMA public;


--
-- Name: EXTENSION pg_stat_statements; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_stat_statements IS 'track execution statistics of all SQL statements executed';

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: adminpack; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS adminpack WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION adminpack; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION adminpack IS 'administrative functions for PostgreSQL';


--
-- Name: btree_gist; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS btree_gist WITH SCHEMA public;


--
-- Name: EXTENSION btree_gist; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION btree_gist IS 'support for indexing common datatypes in GiST';


--
-- Name: pg_buffercache; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS pg_buffercache WITH SCHEMA public;


--
-- Name: EXTENSION pg_buffercache; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_buffercache IS 'examine the shared buffer cache';


--
-- Name: pgstattuple; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS pgstattuple WITH SCHEMA public;


--
-- Name: EXTENSION pgstattuple; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgstattuple IS 'show tuple-level statistics';


SET search_path = public, pg_catalog;

--
-- Name: qto_char(timestamp with time zone, text); Type: FUNCTION; Schema: public; Owner: ejabberd
--

CREATE FUNCTION qto_char(timestamp with time zone, text) RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $_$select to_char($1, $2);$_$;


ALTER FUNCTION public.qto_char(timestamp with time zone, text) OWNER TO "ejabberd";

--
-- Name: spilt_users_to_insert_xml(text, text, text); Type: FUNCTION; Schema: public; Owner: ejabberd
--

CREATE FUNCTION spilt_users_to_insert_xml(users text, muc_name text, msg text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
  declare cnt int;
  declare i int;
  declare v_result text;
  declare f_delimiter varchar(10);
  declare ret_sql text;
  begin
      i := 1;
      f_delimiter := ',';
      ret_sql := '';
      cnt := length(users) - length(replace(users,f_delimiter,''))+1;
      while i <= cnt
     loop
        v_result := split_part(users,f_delimiter,i);
        i := i + 1;
        ret_sql := 'insert into muc_spool(username,xml,from_username) values(''' || v_result || ''',' || quote_literal(msg) || ',''' || muc_name || ''')';
	execute ret_sql;
     end loop;
   return 1;
  EXCEPTION  
	when others then  
	return 0 ; 
  end;
$$;


ALTER FUNCTION public.spilt_users_to_insert_xml(users text, muc_name text, msg text) OWNER TO ejabberd;

--
-- Name: spilt_users_to_insert_xml(text, text, text, text); Type: FUNCTION; Schema: public; Owner: ejabberd
--

CREATE FUNCTION spilt_users_to_insert_xml(users text, muc_name text, nick text, msg text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
  declare cnt int;
  declare i int;
  declare v_result text;
  declare f_delimiter varchar(10);
  declare ret_sql text;
  begin
      i := 1;
      f_delimiter := ',';
      ret_sql := '';
      cnt := length(users) - length(replace(users,f_delimiter,''))+1;
      while i <= cnt
     loop
        v_result := split_part(users,f_delimiter,i);
        i := i + 1;
        ret_sql := 'insert into muc_spool(username,xml,from_username,nick) values(''' || v_result || ''',' || quote_literal(msg) || ',''' || muc_name || ''',''' || nick|| ''')';
	execute ret_sql;
     end loop;
  return 1;
  EXCEPTION  
	when others then  
	return 0 ; 
  end;
$$;


ALTER FUNCTION public.spilt_users_to_insert_xml(users text, muc_name text, nick text, msg text) OWNER TO ejabberd;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: a; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE a (
    id bigint
);


ALTER TABLE a OWNER TO ejabberd;

--
-- Name: admin_user; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE admin_user (
    username character varying(255) NOT NULL,
    priority text NOT NULL
);


ALTER TABLE admin_user OWNER TO ejabberd;

--
-- Name: android_send_stat; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE android_send_stat (
    id bigint NOT NULL,
    uuid text NOT NULL,
    imei text NOT NULL,
    payload text NOT NULL,
    done integer DEFAULT 0,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    update_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE android_send_stat OWNER TO ejabberd;

--
-- Name: android_send_stat_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE android_send_stat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE android_send_stat_id_seq OWNER TO ejabberd;

--
-- Name: android_send_stat_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE android_send_stat_id_seq OWNED BY android_send_stat.id;


--
-- Name: b; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE b (
    id bigint
);


ALTER TABLE b OWNER TO ejabberd;

--
-- Name: day_online_time; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE day_online_time (
    username character varying(50) NOT NULL,
    date_time character varying(20) NOT NULL,
    online_time integer
);


ALTER TABLE day_online_time OWNER TO ejabberd;

--
-- Name: destroy_muc_info; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE destroy_muc_info (
    muc_name text NOT NULL,
    nick_name text,
    reason text,
    id bigint NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE destroy_muc_info OWNER TO ejabberd;

--
-- Name: destroy_muc_info_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE destroy_muc_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE destroy_muc_info_id_seq OWNER TO ejabberd;

--
-- Name: destroy_muc_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE destroy_muc_info_id_seq OWNED BY destroy_muc_info.id;


--
-- Name: domain_mapped_url; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE domain_mapped_url (
    domain text NOT NULL,
    url text NOT NULL
);


ALTER TABLE domain_mapped_url OWNER TO ejabberd;

--
-- Name: flogin_user; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE flogin_user (
    username text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE flogin_user OWNER TO ejabberd;

--
-- Name: group_extent; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE group_extent (
    id bigint NOT NULL,
    group_id text NOT NULL,
    key text NOT NULL,
    value text NOT NULL,
    create_at timestamp without time zone DEFAULT now() NOT NULL,
    update_at timestamp without time zone DEFAULT now() NOT NULL,
    version integer DEFAULT 1
);


ALTER TABLE group_extent OWNER TO ejabberd;

--
-- Name: group_extent_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE group_extent_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE group_extent_id_seq OWNER TO ejabberd;

--
-- Name: group_extent_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE group_extent_id_seq OWNED BY group_extent.id;


--
-- Name: host_info; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE host_info (
    id bigint NOT NULL,
    host text NOT NULL,
    description text,
    create_time timestamp with time zone DEFAULT now() NOT NULL,
    host_admin text NOT NULL
);


ALTER TABLE host_info OWNER TO ejabberd;

--
-- Name: host_info_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE host_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE host_info_id_seq OWNER TO ejabberd;

--
-- Name: host_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE host_info_id_seq OWNED BY host_info.id;


--
-- Name: host_users; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE host_users (
    id bigint NOT NULL,
    host_id bigint NOT NULL,
    user_id text NOT NULL,
    user_name text NOT NULL,
    department text NOT NULL,
    tel text,
    email text,
    dep1 text NOT NULL,
    dep2 text DEFAULT ''::text,
    dep3 text DEFAULT ''::text,
    dep4 text DEFAULT ''::text,
    dep5 text DEFAULT ''::text,
    pinyin text,
    frozen_flag smallint DEFAULT 0 NOT NULL,
    version integer DEFAULT 1 NOT NULL,
    user_type character(1) DEFAULT 'U'::bpchar,
    hire_flag smallint DEFAULT 1 NOT NULL,
    gender smallint DEFAULT 0 NOT NULL,
    password text,
    initialpwd smallint DEFAULT 1 NOT NULL,
    ps_deptid text DEFAULT 'QUNAR'::text
);


ALTER TABLE host_users OWNER TO ejabberd;

--
-- Name: host_users_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE host_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE host_users_id_seq OWNER TO ejabberd;

--
-- Name: host_users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE host_users_id_seq OWNED BY host_users.id;


--
-- Name: invite_spool; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE invite_spool (
    username text NOT NULL,
    inviter text NOT NULL,
    body text NOT NULL,
    "timestamp" integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    host text DEFAULT 'ejabhost1'::text NOT NULL,
    ihost text DEFAULT 'ejabhost1'::text NOT NULL
);


ALTER TABLE invite_spool OWNER TO ejabberd;

--
-- Name: iplimit; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE iplimit (
    ip text NOT NULL,
    created_at timestamp(6) without time zone DEFAULT now() NOT NULL,
    descriptions text DEFAULT now() NOT NULL,
    name text DEFAULT 'ALL'::text NOT NULL,
    priority text DEFAULT '1'::text NOT NULL,
    manager text
);


ALTER TABLE iplimit OWNER TO ejabberd;

--
-- Name: irc_custom; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE irc_custom (
    jid text NOT NULL,
    host text NOT NULL,
    data text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE irc_custom OWNER TO ejabberd;

--
-- Name: last; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE last (
    username text NOT NULL,
    seconds text NOT NULL,
    state text NOT NULL
);


ALTER TABLE last OWNER TO ejabberd;

--
-- Name: mac_push_notice; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE mac_push_notice (
    user_name character varying(200) NOT NULL,
    shield_user character varying(200) NOT NULL
);


ALTER TABLE mac_push_notice OWNER TO ejabberd;

--
-- Name: mask_history; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE mask_history (
    m_from character varying(255),
    m_to character varying(255),
    m_body text,
    create_time timestamp with time zone DEFAULT now(),
    id bigint NOT NULL,
    read_flag smallint DEFAULT 0,
    msg_id text,
    from_host text,
    to_host text
);


ALTER TABLE mask_history OWNER TO ejabberd;

--
-- Name: mask_history_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE mask_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mask_history_id_seq OWNER TO ejabberd;

--
-- Name: mask_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE mask_history_id_seq OWNED BY mask_history.id;


--
-- Name: mask_users; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE mask_users (
    user_name text NOT NULL,
    masked_user text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE mask_users OWNER TO ejabberd;

--
-- Name: mission_list_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE mission_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mission_list_id_seq OWNER TO ejabberd;

--
-- Name: mission_list; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE mission_list (
    id bigint DEFAULT nextval('mission_list_id_seq'::regclass) NOT NULL,
    publisher character varying(255) NOT NULL,
    create_time timestamp with time zone DEFAULT now() NOT NULL,
    title text NOT NULL,
    content text NOT NULL,
    end_time timestamp with time zone DEFAULT now() NOT NULL,
    body text DEFAULT ''::text NOT NULL,
    state integer DEFAULT 0
);


ALTER TABLE mission_list OWNER TO ejabberd;

--
-- Name: mission_member_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE mission_member_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mission_member_id_seq OWNER TO ejabberd;

--
-- Name: mission_member; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE mission_member (
    id bigint,
    publisher character varying(255) NOT NULL,
    last_effect_time timestamp with time zone DEFAULT now() NOT NULL,
    effect_count integer DEFAULT 0 NOT NULL,
    member_id bigint DEFAULT nextval('mission_member_id_seq'::regclass) NOT NULL,
    userstate integer DEFAULT 0 NOT NULL,
    nexttime timestamp with time zone DEFAULT now()
);


ALTER TABLE mission_member OWNER TO ejabberd;

--
-- Name: mission_milestone_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE mission_milestone_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mission_milestone_id_seq OWNER TO ejabberd;

--
-- Name: mission_milestone; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE mission_milestone (
    id bigint DEFAULT nextval('mission_milestone_id_seq'::regclass) NOT NULL,
    mission_id bigint DEFAULT 0,
    create_time timestamp with time zone DEFAULT now() NOT NULL,
    title text DEFAULT ''::text NOT NULL,
    content text DEFAULT ''::text NOT NULL,
    body text DEFAULT ''::text NOT NULL,
    end_time timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE mission_milestone OWNER TO ejabberd;

--
-- Name: motd; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE motd (
    username text NOT NULL,
    xml text,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE motd OWNER TO ejabberd;

--
-- Name: msg_history; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE msg_history (
    m_from character varying(255),
    m_to character varying(255),
    m_body text,
    create_time timestamp with time zone DEFAULT now(),
    id bigint NOT NULL,
    read_flag smallint DEFAULT 0,
    msg_id text,
    from_host text,
    to_host text
);


ALTER TABLE msg_history OWNER TO ejabberd;

--
-- Name: msg_history_backup; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE msg_history_backup (
    m_from character varying(255),
    m_to character varying(255),
    m_body text,
    create_time timestamp with time zone DEFAULT now(),
    id bigint NOT NULL,
    read_flag smallint DEFAULT 0,
    msg_id text,
    from_host text,
    to_host text
);


ALTER TABLE msg_history_backup OWNER TO postgres;

--
-- Name: msg_history_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE msg_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE msg_history_id_seq OWNER TO ejabberd;

--
-- Name: msg_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE msg_history_id_seq OWNED BY msg_history.id;


--
-- Name: msg_history_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW msg_history_view AS
 SELECT msg_history.m_from,
    msg_history.m_to,
    msg_history.create_time,
    msg_history.id,
    msg_history.read_flag,
    msg_history.msg_id,
    msg_history.from_host,
    msg_history.to_host
   FROM msg_history;


ALTER TABLE msg_history_view OWNER TO postgres;

--
-- Name: msg_stat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE msg_stat (
    id integer NOT NULL,
    reportdate date,
    m_from text,
    count integer,
    flag text DEFAULT 'muc'::text,
    nickname text
);


ALTER TABLE msg_stat OWNER TO postgres;

--
-- Name: msg_stat_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE msg_stat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE msg_stat_id_seq OWNER TO postgres;

--
-- Name: msg_stat_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE msg_stat_id_seq OWNED BY msg_stat.id;


--
-- Name: msgcount; Type: VIEW; Schema: public; Owner: ejabberd
--

CREATE VIEW msgcount AS
 SELECT count(1) AS cnt,
    msg_history.m_from,
    (msg_history.create_time)::date AS s_date
   FROM msg_history
  WHERE (msg_history.create_time >= (('now'::text)::date - '3 days'::interval))
  GROUP BY msg_history.m_from, ((msg_history.create_time)::date);


ALTER TABLE msgcount OWNER TO "ejabberd";

--
-- Name: msgview_old; Type: VIEW; Schema: public; Owner: ejabberd
--

CREATE VIEW msgview_old AS
 SELECT msg_history.m_from,
    msg_history.create_time AS s_date
   FROM msg_history;


ALTER TABLE msgview_old OWNER TO "ejabberd";

--
-- Name: muc_last; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_last (
    muc_name text NOT NULL,
    create_time text,
    last_msg_time text DEFAULT '0'::text
);


ALTER TABLE muc_last OWNER TO ejabberd;

--
-- Name: muc_registered; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_registered (
    jid text NOT NULL,
    host text NOT NULL,
    nick text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE muc_registered OWNER TO ejabberd;

--
-- Name: muc_room; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_room (
    name text NOT NULL,
    host text NOT NULL,
    opts text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE muc_room OWNER TO ejabberd;

--
-- Name: muc_room_backup; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_room_backup (
    name text NOT NULL,
    host text NOT NULL,
    opts text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE muc_room_backup OWNER TO ejabberd;

--
-- Name: muc_room_history; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_room_history (
    muc_room_name character varying(255),
    nick character varying(255),
    packet text,
    have_subject boolean,
    size character varying(255),
    create_time timestamp with time zone DEFAULT now(),
    id bigint NOT NULL,
    host text DEFAULT 'ejabhost1'::text,
    msg_id text
);


ALTER TABLE muc_room_history OWNER TO ejabberd;

--
-- Name: muc_room_history_backup; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE muc_room_history_backup (
    muc_room_name character varying(255),
    nick character varying(255),
    packet text,
    have_subject boolean,
    size character varying(255),
    create_time timestamp with time zone DEFAULT now(),
    id bigint NOT NULL,
    host text,
    msg_id text
);


ALTER TABLE muc_room_history_backup OWNER TO postgres;

--
-- Name: muc_room_history_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE muc_room_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE muc_room_history_id_seq OWNER TO ejabberd;

--
-- Name: muc_room_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE muc_room_history_id_seq OWNED BY muc_room_history.id;


--
-- Name: muc_room_users_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE muc_room_users_id_seq
    START WITH 1542632
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE muc_room_users_id_seq OWNER TO ejabberd;

--
-- Name: muc_room_users; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_room_users (
    muc_name character varying(200) NOT NULL,
    username character varying(200) NOT NULL,
    host character varying(200) NOT NULL,
    subscribe_flag text DEFAULT '0'::text NOT NULL,
    id bigint DEFAULT nextval('muc_room_users_id_seq'::regclass) NOT NULL,
    date bigint DEFAULT 0,
    login_date integer,
    domain text DEFAULT 'conference.ejabhost1'::text NOT NULL
);


ALTER TABLE muc_room_users OWNER TO ejabberd;

--
-- Name: muc_room_users_backup; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_room_users_backup (
    muc_name character varying(200) NOT NULL,
    username character varying(200) NOT NULL,
    host character varying(200) NOT NULL,
    subscribe_flag text DEFAULT '0'::text NOT NULL,
    id bigint NOT NULL,
    date bigint DEFAULT 0,
    login_date integer
);


ALTER TABLE muc_room_users_backup OWNER TO ejabberd;

--
-- Name: muc_spool; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_spool (
    username text NOT NULL,
    xml text NOT NULL,
    seq integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    send_flag text DEFAULT '1'::text,
    from_username text DEFAULT '未知'::text NOT NULL,
    nick text
);


ALTER TABLE muc_spool OWNER TO ejabberd;

--
-- Name: muc_spool_seq_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE muc_spool_seq_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE muc_spool_seq_seq OWNER TO ejabberd;

--
-- Name: muc_spool_seq_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE muc_spool_seq_seq OWNED BY muc_spool.seq;


--
-- Name: muc_user_mark; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_user_mark (
    muc_name text NOT NULL,
    user_name text NOT NULL,
    login_date integer NOT NULL,
    logout_date integer,
    id bigint NOT NULL
);


ALTER TABLE muc_user_mark OWNER TO ejabberd;

--
-- Name: muc_user_mark_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE muc_user_mark_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE muc_user_mark_id_seq OWNER TO ejabberd;

--
-- Name: muc_user_mark_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE muc_user_mark_id_seq OWNED BY muc_user_mark.id;


--
-- Name: muc_vcard_info; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_vcard_info (
    muc_name text NOT NULL,
    show_name text NOT NULL,
    muc_desc text,
    muc_title text,
    muc_pic text,
    version integer DEFAULT 1
);


ALTER TABLE muc_vcard_info OWNER TO ejabberd;

--
-- Name: muc_vcard_info_backup; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_vcard_info_backup (
    muc_name text NOT NULL,
    show_name text NOT NULL,
    muc_desc text,
    muc_title text,
    muc_pic text,
    version integer DEFAULT 1
);


ALTER TABLE muc_vcard_info_backup OWNER TO ejabberd;

--
-- Name: muc_white_list; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE muc_white_list (
    muc_name text NOT NULL,
    date_time timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE muc_white_list OWNER TO ejabberd;

--
-- Name: non_human; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE non_human (
    id integer NOT NULL,
    nickname text NOT NULL
);


ALTER TABLE non_human OWNER TO postgres;

--
-- Name: non_human_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE non_human_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE non_human_id_seq OWNER TO postgres;

--
-- Name: non_human_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE non_human_id_seq OWNED BY non_human.id;


--
-- Name: notice_history; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE notice_history (
    id bigint NOT NULL,
    msg_id text NOT NULL,
    m_from text NOT NULL,
    m_body text NOT NULL,
    create_time timestamp with time zone DEFAULT now() NOT NULL,
    host text DEFAULT 'ejabhost1'::text NOT NULL
);


ALTER TABLE notice_history OWNER TO ejabberd;

--
-- Name: notice_history_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE notice_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE notice_history_id_seq OWNER TO ejabberd;

--
-- Name: notice_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE notice_history_id_seq OWNED BY notice_history.id;


--
-- Name: person_extent; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE person_extent (
    id bigint NOT NULL,
    owner text NOT NULL,
    key text NOT NULL,
    value text NOT NULL,
    create_at timestamp without time zone DEFAULT now() NOT NULL,
    update_at timestamp without time zone DEFAULT now() NOT NULL,
    version integer DEFAULT 1,
    host text DEFAULT 'ejabhost1'::text
);


ALTER TABLE person_extent OWNER TO ejabberd;

--
-- Name: person_extent_2017_04_15; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE person_extent_2017_04_15 (
    id bigint NOT NULL,
    owner text NOT NULL,
    key text NOT NULL,
    value text NOT NULL,
    create_at timestamp without time zone DEFAULT now() NOT NULL,
    update_at timestamp without time zone DEFAULT now() NOT NULL,
    version integer DEFAULT 1
);


ALTER TABLE person_extent_2017_04_15 OWNER TO ejabberd;

--
-- Name: person_extent_2017_09_22; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE person_extent_2017_09_22 (
    id bigint NOT NULL,
    owner text NOT NULL,
    key text NOT NULL,
    value text NOT NULL,
    create_at timestamp without time zone NOT NULL,
    update_at timestamp without time zone NOT NULL,
    version integer
);


ALTER TABLE person_extent_2017_09_22 OWNER TO postgres;

--
-- Name: person_extent_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE person_extent_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE person_extent_id_seq OWNER TO ejabberd;

--
-- Name: person_extent_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE person_extent_id_seq OWNED BY person_extent.id;


--
-- Name: person_user_mac_key; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE person_user_mac_key (
    user_name character varying(255) NOT NULL,
    host character varying(255) NOT NULL,
    mac_key character varying(255),
    os text DEFAULT 'ios'::text NOT NULL,
    version text,
    push_flag integer DEFAULT 0 NOT NULL,
    create_time timestamp with time zone DEFAULT now(),
    update_at timestamp with time zone DEFAULT now()
);


ALTER TABLE person_user_mac_key OWNER TO ejabberd;

--
-- Name: privacy_default_list; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE privacy_default_list (
    username text NOT NULL,
    name text NOT NULL
);


ALTER TABLE privacy_default_list OWNER TO ejabberd;

--
-- Name: privacy_list; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE privacy_list (
    username text NOT NULL,
    name text NOT NULL,
    id integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE privacy_list OWNER TO ejabberd;

--
-- Name: privacy_list_data; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE privacy_list_data (
    id bigint,
    t character(1) NOT NULL,
    value text NOT NULL,
    action character(1) NOT NULL,
    ord numeric NOT NULL,
    match_all boolean NOT NULL,
    match_iq boolean NOT NULL,
    match_message boolean NOT NULL,
    match_presence_in boolean NOT NULL,
    match_presence_out boolean NOT NULL
);


ALTER TABLE privacy_list_data OWNER TO ejabberd;

--
-- Name: privacy_list_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE privacy_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE privacy_list_id_seq OWNER TO ejabberd;

--
-- Name: privacy_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE privacy_list_id_seq OWNED BY privacy_list.id;


--
-- Name: private_storage; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE private_storage (
    username text NOT NULL,
    namespace text NOT NULL,
    data text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE private_storage OWNER TO ejabberd;

--
-- Name: pubsub_item; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE pubsub_item (
    nodeid bigint,
    itemid text,
    publisher text,
    creation text,
    modification text,
    payload text
);


ALTER TABLE pubsub_item OWNER TO ejabberd;

--
-- Name: pubsub_node; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE pubsub_node (
    host text,
    node text,
    parent text,
    type text,
    nodeid integer NOT NULL
);


ALTER TABLE pubsub_node OWNER TO ejabberd;

--
-- Name: pubsub_node_nodeid_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE pubsub_node_nodeid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE pubsub_node_nodeid_seq OWNER TO ejabberd;

--
-- Name: pubsub_node_nodeid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE pubsub_node_nodeid_seq OWNED BY pubsub_node.nodeid;


--
-- Name: pubsub_node_option; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE pubsub_node_option (
    nodeid bigint,
    name text,
    val text
);


ALTER TABLE pubsub_node_option OWNER TO ejabberd;

--
-- Name: pubsub_node_owner; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE pubsub_node_owner (
    nodeid bigint,
    owner text
);


ALTER TABLE pubsub_node_owner OWNER TO ejabberd;

--
-- Name: pubsub_state; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE pubsub_state (
    nodeid bigint,
    jid text,
    affiliation character(1),
    subscriptions text,
    stateid integer NOT NULL
);


ALTER TABLE pubsub_state OWNER TO ejabberd;

--
-- Name: pubsub_state_stateid_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE pubsub_state_stateid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE pubsub_state_stateid_seq OWNER TO ejabberd;

--
-- Name: pubsub_state_stateid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE pubsub_state_stateid_seq OWNED BY pubsub_state.stateid;


--
-- Name: pubsub_subscription_opt; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE pubsub_subscription_opt (
    subid text,
    opt_name character varying(32),
    opt_value text
);


ALTER TABLE pubsub_subscription_opt OWNER TO ejabberd;

--
-- Name: qcloud_main; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE qcloud_main (
    id integer NOT NULL,
    q_user character varying(255),
    q_type integer,
    q_title text,
    q_introduce text,
    q_content text,
    q_time bigint,
    q_state integer DEFAULT 1
);


ALTER TABLE qcloud_main OWNER TO postgres;

--
-- Name: TABLE qcloud_main; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE qcloud_main IS 'Evernote主列表存储表';


--
-- Name: COLUMN qcloud_main.q_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main.q_user IS '信息所属用户';


--
-- Name: COLUMN qcloud_main.q_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main.q_type IS '信息类型';


--
-- Name: COLUMN qcloud_main.q_title; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main.q_title IS '标题';


--
-- Name: COLUMN qcloud_main.q_introduce; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main.q_introduce IS '介绍';


--
-- Name: COLUMN qcloud_main.q_content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main.q_content IS '内容';


--
-- Name: COLUMN qcloud_main.q_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main.q_time IS '最后修改时间';


--
-- Name: COLUMN qcloud_main.q_state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main.q_state IS '信息状态标记(正常、收藏、废纸篓、删除)';


--
-- Name: qcloud_main_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE qcloud_main_history (
    id integer NOT NULL,
    q_id integer,
    qh_content text,
    qh_time bigint,
    qh_state integer DEFAULT 1
);


ALTER TABLE qcloud_main_history OWNER TO postgres;

--
-- Name: TABLE qcloud_main_history; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE qcloud_main_history IS 'Evernote主列表操作历史';


--
-- Name: COLUMN qcloud_main_history.q_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main_history.q_id IS '主列表ID';


--
-- Name: COLUMN qcloud_main_history.qh_content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main_history.qh_content IS '操作内容';


--
-- Name: COLUMN qcloud_main_history.qh_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main_history.qh_time IS '操作时间';


--
-- Name: COLUMN qcloud_main_history.qh_state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_main_history.qh_state IS '状态';


--
-- Name: qcloud_main_history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE qcloud_main_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE qcloud_main_history_id_seq OWNER TO postgres;

--
-- Name: qcloud_main_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE qcloud_main_history_id_seq OWNED BY qcloud_main_history.id;


--
-- Name: qcloud_main_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE qcloud_main_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE qcloud_main_id_seq OWNER TO postgres;

--
-- Name: qcloud_main_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE qcloud_main_id_seq OWNED BY qcloud_main.id;


--
-- Name: qcloud_sub; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE qcloud_sub (
    id integer NOT NULL,
    q_id bigint NOT NULL,
    qs_user character varying(255),
    qs_type integer,
    qs_title text,
    qs_introduce text,
    qs_content text,
    qs_time bigint,
    qs_state integer DEFAULT 1
);


ALTER TABLE qcloud_sub OWNER TO postgres;

--
-- Name: TABLE qcloud_sub; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE qcloud_sub IS 'Evernote子列表存储表';


--
-- Name: COLUMN qcloud_sub.q_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub.q_id IS '主列表ID';


--
-- Name: COLUMN qcloud_sub.qs_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub.qs_user IS '信息所属用户';


--
-- Name: COLUMN qcloud_sub.qs_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub.qs_type IS '信息类型';


--
-- Name: COLUMN qcloud_sub.qs_title; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub.qs_title IS '标题';


--
-- Name: COLUMN qcloud_sub.qs_introduce; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub.qs_introduce IS '介绍';


--
-- Name: COLUMN qcloud_sub.qs_content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub.qs_content IS '内容';


--
-- Name: COLUMN qcloud_sub.qs_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub.qs_time IS '最后修改时间';


--
-- Name: COLUMN qcloud_sub.qs_state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub.qs_state IS '信息状态标记(正常、收藏、废纸篓、删除)';


--
-- Name: qcloud_sub_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE qcloud_sub_history (
    id integer NOT NULL,
    qs_id integer,
    qh_content text,
    qh_time bigint,
    qh_state integer DEFAULT 1
);


ALTER TABLE qcloud_sub_history OWNER TO postgres;

--
-- Name: TABLE qcloud_sub_history; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE qcloud_sub_history IS 'Evernote子列表操作历史';


--
-- Name: COLUMN qcloud_sub_history.qs_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub_history.qs_id IS '主列表ID';


--
-- Name: COLUMN qcloud_sub_history.qh_content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub_history.qh_content IS '操作内容';


--
-- Name: COLUMN qcloud_sub_history.qh_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub_history.qh_time IS '操作时间';


--
-- Name: COLUMN qcloud_sub_history.qh_state; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN qcloud_sub_history.qh_state IS '状态';


--
-- Name: qcloud_sub_history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE qcloud_sub_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE qcloud_sub_history_id_seq OWNER TO postgres;

--
-- Name: qcloud_sub_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE qcloud_sub_history_id_seq OWNED BY qcloud_sub_history.id;


--
-- Name: qcloud_sub_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE qcloud_sub_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE qcloud_sub_id_seq OWNER TO postgres;

--
-- Name: qcloud_sub_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE qcloud_sub_id_seq OWNED BY qcloud_sub.id;


--
-- Name: qtalk_user_comment; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE qtalk_user_comment (
    id bigint NOT NULL,
    from_user character varying(20) NOT NULL,
    to_user character varying(20) NOT NULL,
    create_time timestamp with time zone NOT NULL,
    comment character varying(500),
    grade boolean NOT NULL
);


ALTER TABLE qtalk_user_comment OWNER TO "ejabberd";

--
-- Name: COLUMN qtalk_user_comment.from_user; Type: COMMENT; Schema: public; Owner: ejabberd
--

COMMENT ON COLUMN qtalk_user_comment.from_user IS '点评人';


--
-- Name: COLUMN qtalk_user_comment.to_user; Type: COMMENT; Schema: public; Owner: ejabberd
--

COMMENT ON COLUMN qtalk_user_comment.to_user IS '被点评人';


--
-- Name: COLUMN qtalk_user_comment.create_time; Type: COMMENT; Schema: public; Owner: ejabberd
--

COMMENT ON COLUMN qtalk_user_comment.create_time IS '点评时间';


--
-- Name: COLUMN qtalk_user_comment.comment; Type: COMMENT; Schema: public; Owner: ejabberd
--

COMMENT ON COLUMN qtalk_user_comment.comment IS '点评内容';


--
-- Name: COLUMN qtalk_user_comment.grade; Type: COMMENT; Schema: public; Owner: ejabberd
--

COMMENT ON COLUMN qtalk_user_comment.grade IS 'true 赞 fasle 扁';


--
-- Name: qtalk_user_comment_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE qtalk_user_comment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE qtalk_user_comment_id_seq OWNER TO "ejabberd";

--
-- Name: qtalk_user_comment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE qtalk_user_comment_id_seq OWNED BY qtalk_user_comment.id;


--
-- Name: recv_msg_option; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE recv_msg_option (
    username text NOT NULL,
    rec_msg_opt smallint DEFAULT (2)::smallint,
    version integer
);


ALTER TABLE recv_msg_option OWNER TO ejabberd;

--
-- Name: revoke_msg_history_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE revoke_msg_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE revoke_msg_history_id_seq OWNER TO ejabberd;

--
-- Name: revoke_msg_history; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE revoke_msg_history (
    m_from text,
    m_to text,
    m_body text,
    id bigint DEFAULT nextval('revoke_msg_history_id_seq'::regclass) NOT NULL,
    m_timestamp bigint DEFAULT date_part('epoch'::text, now()),
    msg_id text,
    create_time timestamp with time zone DEFAULT now()
);


ALTER TABLE revoke_msg_history OWNER TO ejabberd;

--
-- Name: revoke_msg_history_backup; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE revoke_msg_history_backup (
    m_from text,
    m_to text,
    m_body text,
    id bigint NOT NULL,
    m_timestamp bigint DEFAULT date_part('epoch'::text, now()),
    msg_id text,
    create_time timestamp with time zone DEFAULT now()
);


ALTER TABLE revoke_msg_history_backup OWNER TO postgres;

--
-- Name: robot_info; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE robot_info (
    en_name text NOT NULL,
    cn_name text NOT NULL,
    request_url text NOT NULL,
    rbt_desc text,
    rbt_body text NOT NULL,
    rbt_version bigint,
    password text,
    recommend smallint,
    host text DEFAULT 'ejabhost1'::text
);


ALTER TABLE robot_info OWNER TO ejabberd;

--
-- Name: robot_pubsub; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE robot_pubsub (
    rbt_name text NOT NULL,
    user_name text NOT NULL,
    host text DEFAULT 'ejabhost1'::text,
    rbt_host text DEFAULT 'ejabhost1'::text,
    user_host text DEFAULT 'ejabhost1'::text
);


ALTER TABLE robot_pubsub OWNER TO ejabberd;

--
-- Name: robot_pubsub_backup; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE robot_pubsub_backup (
    rbt_name text NOT NULL,
    user_name text NOT NULL
);


ALTER TABLE robot_pubsub_backup OWNER TO ejabberd;

--
-- Name: users; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE users (
    username text NOT NULL,
    password text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    name text,
    department text DEFAULT '未知部门'::text,
    dep1 text DEFAULT '未知部门'::text,
    dep2 text DEFAULT ''::text,
    dep3 text DEFAULT ''::text,
    dep4 text DEFAULT ''::text,
    dep5 text DEFAULT ''::text,
    fpinyin text,
    spinyin text,
    frozen_flag text DEFAULT '0'::text,
    sn text,
    id bigint NOT NULL,
    hire_type text,
    version integer DEFAULT 1,
    hire_flag smallint,
    type character(1) DEFAULT 'u'::bpchar,
    ps_deptid text DEFAULT 'QUNAR'::text NOT NULL
);


ALTER TABLE users OWNER TO ejabberd;

--
-- Name: roommsgview_old; Type: VIEW; Schema: public; Owner: ejabberd
--

CREATE VIEW roommsgview_old AS
 SELECT u.username,
    rh.nick,
    rh.create_time
   FROM (muc_room_history rh
     JOIN users u ON (((rh.nick)::text = u.name)));


ALTER TABLE roommsgview_old OWNER TO "ejabberd";

--
-- Name: roster_version; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE roster_version (
    username text NOT NULL,
    version text NOT NULL
);


ALTER TABLE roster_version OWNER TO ejabberd;

--
-- Name: rostergroups; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE rostergroups (
    username text NOT NULL,
    jid text NOT NULL,
    grp text NOT NULL
);


ALTER TABLE rostergroups OWNER TO ejabberd;

--
-- Name: rosterusers; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE rosterusers (
    username text NOT NULL,
    jid text NOT NULL,
    nick text NOT NULL,
    subscription character(1) NOT NULL,
    ask character(1) NOT NULL,
    askmessage text NOT NULL,
    server character(1) NOT NULL,
    subscribe text,
    type text,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE rosterusers OWNER TO ejabberd;

--
-- Name: s2s_mapped_host; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE s2s_mapped_host (
    domain character varying(255) NOT NULL,
    host character varying(255) NOT NULL,
    port integer,
    priority character varying(255) NOT NULL,
    weight character varying(255) NOT NULL
);


ALTER TABLE s2s_mapped_host OWNER TO ejabberd;

--
-- Name: sms_log_info; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE sms_log_info (
    id bigint NOT NULL,
    ip text NOT NULL,
    tel text NOT NULL,
    create_time timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE sms_log_info OWNER TO ejabberd;

--
-- Name: sms_log_info_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE sms_log_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sms_log_info_id_seq OWNER TO ejabberd;

--
-- Name: sms_log_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE sms_log_info_id_seq OWNED BY sms_log_info.id;


--
-- Name: sms_request_info; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE sms_request_info (
    id bigint NOT NULL,
    ip text NOT NULL,
    tel text NOT NULL,
    create_time timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE sms_request_info OWNER TO ejabberd;

--
-- Name: sms_request_info_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE sms_request_info_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sms_request_info_id_seq OWNER TO ejabberd;

--
-- Name: sms_request_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE sms_request_info_id_seq OWNED BY sms_request_info.id;


--
-- Name: sms_user_info; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE sms_user_info (
    user_name text NOT NULL,
    last_sms_time timestamp without time zone DEFAULT now() NOT NULL,
    phone text NOT NULL,
    verify_code text
);


ALTER TABLE sms_user_info OWNER TO ejabberd;

--
-- Name: spool; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE spool (
    username text NOT NULL,
    xml text NOT NULL,
    seq integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    send_flag text DEFAULT '1'::text,
    from_username text DEFAULT '未知'::text NOT NULL,
    notice_flag text DEFAULT '0'::text,
    away_flag text DEFAULT '0'::text
);


ALTER TABLE spool OWNER TO ejabberd;

--
-- Name: spool_seq_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE spool_seq_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE spool_seq_seq OWNER TO ejabberd;

--
-- Name: spool_seq_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE spool_seq_seq OWNED BY spool.seq;


--
-- Name: sr_group; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE sr_group (
    name text NOT NULL,
    opts text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE sr_group OWNER TO ejabberd;

--
-- Name: sr_user; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE sr_user (
    jid text NOT NULL,
    grp text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE sr_user OWNER TO ejabberd;

--
-- Name: test_user; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE test_user (
    id integer,
    name text,
    count integer
);


ALTER TABLE test_user OWNER TO ejabberd;

--
-- Name: user_block_list; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE user_block_list (
    username text NOT NULL,
    blockuser text NOT NULL
);


ALTER TABLE user_block_list OWNER TO ejabberd;

--
-- Name: user_friends; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE user_friends (
    username text NOT NULL,
    friend text NOT NULL,
    relationship smallint,
    version integer,
    host text DEFAULT 'ejabhost1'::text NOT NULL,
    userhost character varying(255) DEFAULT 'ejabhost1'::character varying
);


ALTER TABLE user_friends OWNER TO ejabberd;

--
-- Name: user_mac_key; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE user_mac_key (
    user_name character varying(255) NOT NULL,
    host character varying(255) NOT NULL,
    mac_key character varying(255),
    os text DEFAULT 'ios'::text NOT NULL,
    version text,
    push_flag integer DEFAULT 0 NOT NULL
);


ALTER TABLE user_mac_key OWNER TO ejabberd;

--
-- Name: user_name; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE user_name (
    user_name text NOT NULL,
    masked_user text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE user_name OWNER TO ejabberd;

--
-- Name: user_register_mucs; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE user_register_mucs (
    username text NOT NULL,
    muc_name text NOT NULL,
    domain character varying(200) NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    registed_flag integer DEFAULT 1,
    host text DEFAULT 'ejabhost1'::text NOT NULL
);


ALTER TABLE user_register_mucs OWNER TO ejabberd;

--
-- Name: user_register_mucs_backup; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE user_register_mucs_backup (
    username text NOT NULL,
    muc_name text NOT NULL,
    domain character varying(200) NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    registed_flag integer DEFAULT 1
);


ALTER TABLE user_register_mucs_backup OWNER TO ejabberd;

--
-- Name: user_relation_opts; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE user_relation_opts (
    username text NOT NULL,
    rec_msg_opt smallint DEFAULT (2)::smallint,
    vld_friend_opt smallint DEFAULT (1)::smallint,
    validate_quetion text,
    validate_answer text,
    vesion smallint,
    userhost text DEFAULT 'ejabhost1'::text
);


ALTER TABLE user_relation_opts OWNER TO ejabberd;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE users_id_seq OWNER TO ejabberd;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: vcard; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE vcard (
    username text NOT NULL,
    vcard text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE vcard OWNER TO ejabberd;

--
-- Name: vcard_search; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE vcard_search (
    username text NOT NULL,
    lusername text NOT NULL,
    fn text NOT NULL,
    lfn text NOT NULL,
    family text NOT NULL,
    lfamily text NOT NULL,
    given text NOT NULL,
    lgiven text NOT NULL,
    middle text NOT NULL,
    lmiddle text NOT NULL,
    nickname text NOT NULL,
    lnickname text NOT NULL,
    bday text NOT NULL,
    lbday text NOT NULL,
    ctry text NOT NULL,
    lctry text NOT NULL,
    locality text NOT NULL,
    llocality text NOT NULL,
    email text NOT NULL,
    lemail text NOT NULL,
    orgname text NOT NULL,
    lorgname text NOT NULL,
    orgunit text NOT NULL,
    lorgunit text NOT NULL
);


ALTER TABLE vcard_search OWNER TO ejabberd;

--
-- Name: vcard_version; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE vcard_version (
    username text NOT NULL,
    version integer DEFAULT 1,
    url text,
    uin character varying(30),
    id bigint NOT NULL,
    profile_version smallint DEFAULT (1)::smallint,
    mood text,
    gender integer DEFAULT 0 NOT NULL,
    host text DEFAULT 'ejabhost1'::text
);


ALTER TABLE vcard_version OWNER TO ejabberd;

--
-- Name: vcard_version_id_seq; Type: SEQUENCE; Schema: public; Owner: ejabberd
--

CREATE SEQUENCE vcard_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE vcard_version_id_seq OWNER TO ejabberd;

--
-- Name: vcard_version_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ejabberd
--

ALTER SEQUENCE vcard_version_id_seq OWNED BY vcard_version.id;


--
-- Name: vcard_xupdate; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE vcard_xupdate (
    username text NOT NULL,
    hash text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE vcard_xupdate OWNER TO ejabberd;

--
-- Name: virtual_user_list; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE virtual_user_list (
    virtual_user text NOT NULL,
    real_user text NOT NULL,
    on_duty_flag smallint
);


ALTER TABLE virtual_user_list OWNER TO ejabberd;

--
-- Name: warn_msg_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE warn_msg_history (
    id bigint NOT NULL,
    m_from character varying(255),
    m_to character varying(255),
    read_flag smallint DEFAULT 0,
    msg_id text,
    from_host text,
    to_host text,
    m_body text,
    create_time timestamp with time zone DEFAULT now()
);


ALTER TABLE warn_msg_history OWNER TO postgres;

--
-- Name: warn_msg_history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE warn_msg_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE warn_msg_history_id_seq OWNER TO postgres;

--
-- Name: warn_msg_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE warn_msg_history_id_seq OWNED BY warn_msg_history.id;


--
-- Name: warn_msg_history_backup; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE warn_msg_history_backup (
    id bigint DEFAULT nextval('warn_msg_history_id_seq'::regclass) NOT NULL,
    m_from character varying(255),
    m_to character varying(255),
    read_flag smallint DEFAULT 0,
    msg_id text,
    from_host text,
    to_host text,
    m_body text,
    create_time timestamp with time zone DEFAULT now()
);


ALTER TABLE warn_msg_history_backup OWNER TO postgres;

--
-- Name: white_list; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE white_list (
    username text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    single_flag text DEFAULT '1'::text
);


ALTER TABLE white_list OWNER TO ejabberd;

--
-- Name: win_dump_url; Type: TABLE; Schema: public; Owner: ejabberd
--

CREATE TABLE win_dump_url (
    user_name character varying(50) NOT NULL,
    dump_url text NOT NULL,
    dump_time timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE win_dump_url OWNER TO ejabberd;

--
-- Name: android_send_stat id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY android_send_stat ALTER COLUMN id SET DEFAULT nextval('android_send_stat_id_seq'::regclass);


--
-- Name: destroy_muc_info id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY destroy_muc_info ALTER COLUMN id SET DEFAULT nextval('destroy_muc_info_id_seq'::regclass);


--
-- Name: group_extent id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY group_extent ALTER COLUMN id SET DEFAULT nextval('group_extent_id_seq'::regclass);


--
-- Name: host_info id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY host_info ALTER COLUMN id SET DEFAULT nextval('host_info_id_seq'::regclass);


--
-- Name: host_users id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY host_users ALTER COLUMN id SET DEFAULT nextval('host_users_id_seq'::regclass);


--
-- Name: mask_history id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY mask_history ALTER COLUMN id SET DEFAULT nextval('mask_history_id_seq'::regclass);


--
-- Name: msg_history id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY msg_history ALTER COLUMN id SET DEFAULT nextval('msg_history_id_seq'::regclass);


--
-- Name: msg_stat id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY msg_stat ALTER COLUMN id SET DEFAULT nextval('msg_stat_id_seq'::regclass);


--
-- Name: muc_room_history id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_room_history ALTER COLUMN id SET DEFAULT nextval('muc_room_history_id_seq'::regclass);


--
-- Name: muc_spool seq; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_spool ALTER COLUMN seq SET DEFAULT nextval('muc_spool_seq_seq'::regclass);


--
-- Name: muc_user_mark id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_user_mark ALTER COLUMN id SET DEFAULT nextval('muc_user_mark_id_seq'::regclass);


--
-- Name: non_human id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY non_human ALTER COLUMN id SET DEFAULT nextval('non_human_id_seq'::regclass);


--
-- Name: notice_history id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY notice_history ALTER COLUMN id SET DEFAULT nextval('notice_history_id_seq'::regclass);


--
-- Name: person_extent id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY person_extent ALTER COLUMN id SET DEFAULT nextval('person_extent_id_seq'::regclass);


--
-- Name: privacy_list id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY privacy_list ALTER COLUMN id SET DEFAULT nextval('privacy_list_id_seq'::regclass);


--
-- Name: pubsub_node nodeid; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY pubsub_node ALTER COLUMN nodeid SET DEFAULT nextval('pubsub_node_nodeid_seq'::regclass);


--
-- Name: pubsub_state stateid; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY pubsub_state ALTER COLUMN stateid SET DEFAULT nextval('pubsub_state_stateid_seq'::regclass);


--
-- Name: qcloud_main id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qcloud_main ALTER COLUMN id SET DEFAULT nextval('qcloud_main_id_seq'::regclass);


--
-- Name: qcloud_main_history id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qcloud_main_history ALTER COLUMN id SET DEFAULT nextval('qcloud_main_history_id_seq'::regclass);


--
-- Name: qcloud_sub id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qcloud_sub ALTER COLUMN id SET DEFAULT nextval('qcloud_sub_id_seq'::regclass);


--
-- Name: qcloud_sub_history id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qcloud_sub_history ALTER COLUMN id SET DEFAULT nextval('qcloud_sub_history_id_seq'::regclass);


--
-- Name: qtalk_user_comment id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY qtalk_user_comment ALTER COLUMN id SET DEFAULT nextval('qtalk_user_comment_id_seq'::regclass);


--
-- Name: sms_log_info id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY sms_log_info ALTER COLUMN id SET DEFAULT nextval('sms_log_info_id_seq'::regclass);


--
-- Name: sms_request_info id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY sms_request_info ALTER COLUMN id SET DEFAULT nextval('sms_request_info_id_seq'::regclass);


--
-- Name: spool seq; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY spool ALTER COLUMN seq SET DEFAULT nextval('spool_seq_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Name: vcard_version id; Type: DEFAULT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY vcard_version ALTER COLUMN id SET DEFAULT nextval('vcard_version_id_seq'::regclass);


--
-- Name: warn_msg_history id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY warn_msg_history ALTER COLUMN id SET DEFAULT nextval('warn_msg_history_id_seq'::regclass);


--
-- Data for Name: a; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY a (id) FROM stdin;
\.


--
-- Data for Name: admin_user; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY admin_user (username, priority) FROM stdin;
\.


--
-- Data for Name: android_send_stat; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY android_send_stat (id, uuid, imei, payload, done, created_at, update_at) FROM stdin;
\.


--
-- Data for Name: b; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY b (id) FROM stdin;
\.


--
-- Data for Name: day_online_time; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY day_online_time (username, date_time, online_time) FROM stdin;
\.


--
-- Data for Name: destroy_muc_info; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY destroy_muc_info (muc_name, nick_name, reason, id, created_at) FROM stdin;
\.


--
-- Data for Name: domain_mapped_url; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY domain_mapped_url (domain, url) FROM stdin;
\.


--
-- Data for Name: flogin_user; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY flogin_user (username, created_at) FROM stdin;
\.


--
-- Data for Name: group_extent; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY group_extent (id, group_id, key, value, create_at, update_at, version) FROM stdin;
\.


--
-- Data for Name: host_info; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY host_info (id, host, description, create_time, host_admin) FROM stdin;
\.


--
-- Data for Name: host_users; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY host_users (id, host_id, user_id, user_name, department, tel, email, dep1, dep2, dep3, dep4, dep5, pinyin, frozen_flag, version, user_type, hire_flag, gender, password, initialpwd, ps_deptid) FROM stdin;
\.


--
-- Data for Name: invite_spool; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY invite_spool (username, inviter, body, "timestamp", created_at, host, ihost) FROM stdin;
\.


--
-- Data for Name: iplimit; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY iplimit (ip, created_at, descriptions, name, priority, manager) FROM stdin;
\.


--
-- Data for Name: irc_custom; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY irc_custom (jid, host, data, created_at) FROM stdin;
\.


--
-- Data for Name: last; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY last (username, seconds, state) FROM stdin;
\.


--
-- Data for Name: mac_push_notice; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY mac_push_notice (user_name, shield_user) FROM stdin;
\.


--
-- Data for Name: mask_history; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY mask_history (m_from, m_to, m_body, create_time, id, read_flag, msg_id, from_host, to_host) FROM stdin;
\.


--
-- Data for Name: mask_users; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY mask_users (user_name, masked_user, created_at) FROM stdin;
\.


--
-- Data for Name: mission_list; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY mission_list (id, publisher, create_time, title, content, end_time, body, state) FROM stdin;
\.


--
-- Data for Name: mission_member; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY mission_member (id, publisher, last_effect_time, effect_count, member_id, userstate, nexttime) FROM stdin;
\.


--
-- Data for Name: mission_milestone; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY mission_milestone (id, mission_id, create_time, title, content, body, end_time) FROM stdin;
\.


--
-- Data for Name: motd; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY motd (username, xml, created_at) FROM stdin;
\.


--
-- Data for Name: msg_history; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY msg_history (m_from, m_to, m_body, create_time, id, read_flag, msg_id, from_host, to_host) FROM stdin;
\.


--
-- Data for Name: msg_history_backup; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY msg_history_backup (m_from, m_to, m_body, create_time, id, read_flag, msg_id, from_host, to_host) FROM stdin;
\.


--
-- Data for Name: msg_stat; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY msg_stat (id, reportdate, m_from, count, flag, nickname) FROM stdin;
\.


--
-- Data for Name: muc_last; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_last (muc_name, create_time, last_msg_time) FROM stdin;
\.


--
-- Data for Name: muc_registered; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_registered (jid, host, nick, created_at) FROM stdin;
\.


--
-- Data for Name: muc_room; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_room (name, host, opts, created_at) FROM stdin;
\.


--
-- Data for Name: muc_room_backup; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_room_backup (name, host, opts, created_at) FROM stdin;
\.


--
-- Data for Name: muc_room_history; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_room_history (muc_room_name, nick, packet, have_subject, size, create_time, id, host, msg_id) FROM stdin;
\.


--
-- Data for Name: muc_room_history_backup; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY muc_room_history_backup (muc_room_name, nick, packet, have_subject, size, create_time, id, host, msg_id) FROM stdin;
\.


--
-- Data for Name: muc_room_users; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_room_users (muc_name, username, host, subscribe_flag, id, date, login_date, domain) FROM stdin;
\.


--
-- Data for Name: muc_room_users_backup; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_room_users_backup (muc_name, username, host, subscribe_flag, id, date, login_date) FROM stdin;
\.


--
-- Data for Name: muc_spool; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_spool (username, xml, seq, created_at, send_flag, from_username, nick) FROM stdin;
\.


--
-- Data for Name: muc_user_mark; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_user_mark (muc_name, user_name, login_date, logout_date, id) FROM stdin;
\.


--
-- Data for Name: muc_vcard_info; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_vcard_info (muc_name, show_name, muc_desc, muc_title, muc_pic, version) FROM stdin;
\.


--
-- Data for Name: muc_vcard_info_backup; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_vcard_info_backup (muc_name, show_name, muc_desc, muc_title, muc_pic, version) FROM stdin;
\.


--
-- Data for Name: muc_white_list; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY muc_white_list (muc_name, date_time) FROM stdin;
\.


--
-- Data for Name: non_human; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY non_human (id, nickname) FROM stdin;
\.


--
-- Data for Name: notice_history; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY notice_history (id, msg_id, m_from, m_body, create_time, host) FROM stdin;
\.


--
-- Data for Name: person_extent; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY person_extent (id, owner, key, value, create_at, update_at, version, host) FROM stdin;
\.


--
-- Data for Name: person_extent_2017_04_15; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY person_extent_2017_04_15 (id, owner, key, value, create_at, update_at, version) FROM stdin;
\.


--
-- Data for Name: person_extent_2017_09_22; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY person_extent_2017_09_22 (id, owner, key, value, create_at, update_at, version) FROM stdin;
\.


--
-- Data for Name: person_user_mac_key; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY person_user_mac_key (user_name, host, mac_key, os, version, push_flag, create_time, update_at) FROM stdin;
\.


--
-- Data for Name: privacy_default_list; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY privacy_default_list (username, name) FROM stdin;
\.


--
-- Data for Name: privacy_list; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY privacy_list (username, name, id, created_at) FROM stdin;
\.


--
-- Data for Name: privacy_list_data; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY privacy_list_data (id, t, value, action, ord, match_all, match_iq, match_message, match_presence_in, match_presence_out) FROM stdin;
\.


--
-- Data for Name: private_storage; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY private_storage (username, namespace, data, created_at) FROM stdin;
\.


--
-- Data for Name: pubsub_item; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY pubsub_item (nodeid, itemid, publisher, creation, modification, payload) FROM stdin;
\.


--
-- Data for Name: pubsub_node; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY pubsub_node (host, node, parent, type, nodeid) FROM stdin;
\.


--
-- Data for Name: pubsub_node_option; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY pubsub_node_option (nodeid, name, val) FROM stdin;
\.


--
-- Data for Name: pubsub_node_owner; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY pubsub_node_owner (nodeid, owner) FROM stdin;
\.


--
-- Data for Name: pubsub_state; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY pubsub_state (nodeid, jid, affiliation, subscriptions, stateid) FROM stdin;
\.


--
-- Data for Name: pubsub_subscription_opt; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY pubsub_subscription_opt (subid, opt_name, opt_value) FROM stdin;
\.


--
-- Data for Name: qcloud_main; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY qcloud_main (id, q_user, q_type, q_title, q_introduce, q_content, q_time, q_state) FROM stdin;
\.


--
-- Data for Name: qcloud_main_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY qcloud_main_history (id, q_id, qh_content, qh_time, qh_state) FROM stdin;
\.


--
-- Data for Name: qcloud_sub; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY qcloud_sub (id, q_id, qs_user, qs_type, qs_title, qs_introduce, qs_content, qs_time, qs_state) FROM stdin;
\.


--
-- Data for Name: qcloud_sub_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY qcloud_sub_history (id, qs_id, qh_content, qh_time, qh_state) FROM stdin;
\.


--
-- Data for Name: qtalk_user_comment; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY qtalk_user_comment (id, from_user, to_user, create_time, comment, grade) FROM stdin;
\.


--
-- Data for Name: recv_msg_option; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY recv_msg_option (username, rec_msg_opt, version) FROM stdin;
\.


--
-- Data for Name: revoke_msg_history; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY revoke_msg_history (m_from, m_to, m_body, id, m_timestamp, msg_id, create_time) FROM stdin;
\.


--
-- Data for Name: revoke_msg_history_backup; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY revoke_msg_history_backup (m_from, m_to, m_body, id, m_timestamp, msg_id, create_time) FROM stdin;
\.


--
-- Data for Name: robot_info; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY robot_info (en_name, cn_name, request_url, rbt_desc, rbt_body, rbt_version, password, recommend, host) FROM stdin;
\.


--
-- Data for Name: robot_pubsub; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY robot_pubsub (rbt_name, user_name, host, rbt_host, user_host) FROM stdin;
\.


--
-- Data for Name: robot_pubsub_backup; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY robot_pubsub_backup (rbt_name, user_name) FROM stdin;
\.


--
-- Data for Name: roster_version; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY roster_version (username, version) FROM stdin;
\.


--
-- Data for Name: rostergroups; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY rostergroups (username, jid, grp) FROM stdin;
\.


--
-- Data for Name: rosterusers; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY rosterusers (username, jid, nick, subscription, ask, askmessage, server, subscribe, type, created_at) FROM stdin;
\.


--
-- Data for Name: s2s_mapped_host; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY s2s_mapped_host (domain, host, port, priority, weight) FROM stdin;
\.


--
-- Data for Name: sms_log_info; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY sms_log_info (id, ip, tel, create_time) FROM stdin;
\.


--
-- Data for Name: sms_request_info; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY sms_request_info (id, ip, tel, create_time) FROM stdin;
\.


--
-- Data for Name: sms_user_info; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY sms_user_info (user_name, last_sms_time, phone, verify_code) FROM stdin;
\.


--
-- Data for Name: spool; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY spool (username, xml, seq, created_at, send_flag, from_username, notice_flag, away_flag) FROM stdin;
\.


--
-- Data for Name: sr_group; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY sr_group (name, opts, created_at) FROM stdin;
\.


--
-- Data for Name: sr_user; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY sr_user (jid, grp, created_at) FROM stdin;
\.


--
-- Data for Name: test_user; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY test_user (id, name, count) FROM stdin;
\.


--
-- Data for Name: user_block_list; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY user_block_list (username, blockuser) FROM stdin;
\.


--
-- Data for Name: user_friends; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY user_friends (username, friend, relationship, version, host, userhost) FROM stdin;
\.


--
-- Data for Name: user_mac_key; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY user_mac_key (user_name, host, mac_key, os, version, push_flag) FROM stdin;
\.


--
-- Data for Name: user_name; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY user_name (user_name, masked_user, created_at) FROM stdin;
\.


--
-- Data for Name: user_register_mucs; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY user_register_mucs (username, muc_name, domain, created_at, registed_flag, host) FROM stdin;
\.


--
-- Data for Name: user_register_mucs_backup; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY user_register_mucs_backup (username, muc_name, domain, created_at, registed_flag) FROM stdin;
\.


--
-- Data for Name: user_relation_opts; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY user_relation_opts (username, rec_msg_opt, vld_friend_opt, validate_quetion, validate_answer, vesion, userhost) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY users (username, password, created_at, name, department, dep1, dep2, dep3, dep4, dep5, fpinyin, spinyin, frozen_flag, sn, id, hire_type, version, hire_flag, type, ps_deptid) FROM stdin;
\.


--
-- Data for Name: vcard; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY vcard (username, vcard, created_at) FROM stdin;
\.


--
-- Data for Name: vcard_search; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY vcard_search (username, lusername, fn, lfn, family, lfamily, given, lgiven, middle, lmiddle, nickname, lnickname, bday, lbday, ctry, lctry, locality, llocality, email, lemail, orgname, lorgname, orgunit, lorgunit) FROM stdin;
\.


--
-- Data for Name: vcard_version; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY vcard_version (username, version, url, uin, id, profile_version, mood, gender, host) FROM stdin;
\.


--
-- Data for Name: vcard_xupdate; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY vcard_xupdate (username, hash, created_at) FROM stdin;
\.


--
-- Data for Name: virtual_user_list; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY virtual_user_list (virtual_user, real_user, on_duty_flag) FROM stdin;
\.


--
-- Data for Name: warn_msg_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY warn_msg_history (id, m_from, m_to, read_flag, msg_id, from_host, to_host, m_body, create_time) FROM stdin;
\.


--
-- Data for Name: warn_msg_history_backup; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY warn_msg_history_backup (id, m_from, m_to, read_flag, msg_id, from_host, to_host, m_body, create_time) FROM stdin;
\.


--
-- Data for Name: white_list; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY white_list (username, created_at, single_flag) FROM stdin;
\.


--
-- Data for Name: win_dump_url; Type: TABLE DATA; Schema: public; Owner: ejabberd
--

COPY win_dump_url (user_name, dump_url, dump_time) FROM stdin;
\.


--
-- Name: android_send_stat_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('android_send_stat_id_seq', 1, false);


--
-- Name: destroy_muc_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('destroy_muc_info_id_seq', 1, false);


--
-- Name: group_extent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('group_extent_id_seq', 1, false);


--
-- Name: host_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('host_info_id_seq', 1, false);


--
-- Name: host_users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('host_users_id_seq', 1, false);


--
-- Name: mask_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('mask_history_id_seq', 1, false);


--
-- Name: mission_list_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('mission_list_id_seq', 1, false);


--
-- Name: mission_member_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('mission_member_id_seq', 1, false);


--
-- Name: mission_milestone_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('mission_milestone_id_seq', 1, false);


--
-- Name: msg_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('msg_history_id_seq', 1, false);


--
-- Name: msg_stat_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('msg_stat_id_seq', 1, false);


--
-- Name: muc_room_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('muc_room_history_id_seq', 1, false);


--
-- Name: muc_room_users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('muc_room_users_id_seq', 1542632, false);


--
-- Name: muc_spool_seq_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('muc_spool_seq_seq', 1, false);


--
-- Name: muc_user_mark_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('muc_user_mark_id_seq', 1, false);


--
-- Name: non_human_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('non_human_id_seq', 1, false);


--
-- Name: notice_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('notice_history_id_seq', 1, false);


--
-- Name: person_extent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('person_extent_id_seq', 1, false);


--
-- Name: privacy_list_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('privacy_list_id_seq', 1, false);


--
-- Name: pubsub_node_nodeid_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('pubsub_node_nodeid_seq', 1, false);


--
-- Name: pubsub_state_stateid_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('pubsub_state_stateid_seq', 1, false);


--
-- Name: qcloud_main_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('qcloud_main_history_id_seq', 1, false);


--
-- Name: qcloud_main_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('qcloud_main_id_seq', 1, false);


--
-- Name: qcloud_sub_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('qcloud_sub_history_id_seq', 1, false);


--
-- Name: qcloud_sub_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('qcloud_sub_id_seq', 1, false);


--
-- Name: qtalk_user_comment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('qtalk_user_comment_id_seq', 1, false);


--
-- Name: revoke_msg_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('revoke_msg_history_id_seq', 1, false);


--
-- Name: sms_log_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('sms_log_info_id_seq', 1, false);


--
-- Name: sms_request_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('sms_request_info_id_seq', 1, false);


--
-- Name: spool_seq_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('spool_seq_seq', 1, false);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('users_id_seq', 1, false);


--
-- Name: vcard_version_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ejabberd
--

SELECT pg_catalog.setval('vcard_version_id_seq', 1, false);


--
-- Name: warn_msg_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('warn_msg_history_id_seq', 1, false);


--
-- Name: admin_user admin_user_pk; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY admin_user
    ADD CONSTRAINT admin_user_pk PRIMARY KEY (username);


--
-- Name: muc_room_users_backup along_tmp_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_room_users_backup
    ADD CONSTRAINT along_tmp_pkey PRIMARY KEY (id);


--
-- Name: android_send_stat android_send_stat_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY android_send_stat
    ADD CONSTRAINT android_send_stat_pkey PRIMARY KEY (id);


--
-- Name: day_online_time day_online_time_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY day_online_time
    ADD CONSTRAINT day_online_time_pkey PRIMARY KEY (username, date_time);


--
-- Name: destroy_muc_info destroy_muc_info_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY destroy_muc_info
    ADD CONSTRAINT destroy_muc_info_pkey PRIMARY KEY (id);


--
-- Name: group_extent group_extent_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY group_extent
    ADD CONSTRAINT group_extent_pkey PRIMARY KEY (id);


--
-- Name: host_info host_info_host_key; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY host_info
    ADD CONSTRAINT host_info_host_key UNIQUE (host);


--
-- Name: host_info host_info_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY host_info
    ADD CONSTRAINT host_info_pkey PRIMARY KEY (id);


--
-- Name: host_users host_users_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY host_users
    ADD CONSTRAINT host_users_pkey PRIMARY KEY (id);


--
-- Name: host_users host_users_user_id_host_id_key; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY host_users
    ADD CONSTRAINT host_users_user_id_host_id_key UNIQUE (user_id, host_id);


--
-- Name: last last_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY last
    ADD CONSTRAINT last_pkey PRIMARY KEY (username);


--
-- Name: mac_push_notice mac_user_notice_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY mac_push_notice
    ADD CONSTRAINT mac_user_notice_pkey PRIMARY KEY (user_name, shield_user);


--
-- Name: mission_list mission_list_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY mission_list
    ADD CONSTRAINT mission_list_pkey PRIMARY KEY (id);


--
-- Name: mission_milestone mission_milestone_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY mission_milestone
    ADD CONSTRAINT mission_milestone_pkey PRIMARY KEY (id);


--
-- Name: motd motd_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY motd
    ADD CONSTRAINT motd_pkey PRIMARY KEY (username);


--
-- Name: msg_history_backup msg_history_backup_tmp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY msg_history_backup
    ADD CONSTRAINT msg_history_backup_tmp_pkey PRIMARY KEY (id);


--
-- Name: msg_stat msg_stat_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY msg_stat
    ADD CONSTRAINT msg_stat_pkey PRIMARY KEY (id);


--
-- Name: muc_last muc_last_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_last
    ADD CONSTRAINT muc_last_pkey PRIMARY KEY (muc_name);


--
-- Name: muc_room_history_backup muc_room_history_2016_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY muc_room_history_backup
    ADD CONSTRAINT muc_room_history_2016_pkey PRIMARY KEY (id);


--
-- Name: muc_room_history muc_room_history_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_room_history
    ADD CONSTRAINT muc_room_history_pkey PRIMARY KEY (id);


--
-- Name: muc_room_users muc_room_users_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_room_users
    ADD CONSTRAINT muc_room_users_pkey PRIMARY KEY (id);


--
-- Name: muc_spool muc_spool_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_spool
    ADD CONSTRAINT muc_spool_pkey PRIMARY KEY (seq);


--
-- Name: muc_user_mark muc_user_mark_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_user_mark
    ADD CONSTRAINT muc_user_mark_pkey PRIMARY KEY (id);


--
-- Name: muc_vcard_info_backup muc_vcard_info_backup_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_vcard_info_backup
    ADD CONSTRAINT muc_vcard_info_backup_pkey PRIMARY KEY (muc_name);


--
-- Name: muc_vcard_info muc_vcard_info_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_vcard_info
    ADD CONSTRAINT muc_vcard_info_pkey PRIMARY KEY (muc_name);


--
-- Name: muc_white_list muc_white_list_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY muc_white_list
    ADD CONSTRAINT muc_white_list_pkey PRIMARY KEY (muc_name);


--
-- Name: non_human non_humam_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY non_human
    ADD CONSTRAINT non_humam_pkey PRIMARY KEY (id);


--
-- Name: notice_history notice_history_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY notice_history
    ADD CONSTRAINT notice_history_pkey PRIMARY KEY (id);


--
-- Name: person_extent_2017_04_15 person_extent_2017_04_15_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY person_extent_2017_04_15
    ADD CONSTRAINT person_extent_2017_04_15_pkey PRIMARY KEY (id);


--
-- Name: person_extent_2017_09_22 person_extent_2017_09_22_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY person_extent_2017_09_22
    ADD CONSTRAINT person_extent_2017_09_22_pkey PRIMARY KEY (id);


--
-- Name: person_extent person_extent_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY person_extent
    ADD CONSTRAINT person_extent_pkey PRIMARY KEY (id);


--
-- Name: person_user_mac_key person_user_mac_key_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY person_user_mac_key
    ADD CONSTRAINT person_user_mac_key_pkey PRIMARY KEY (user_name, host, os);


--
-- Name: domain_mapped_url pk_domain_mapped_url; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY domain_mapped_url
    ADD CONSTRAINT pk_domain_mapped_url PRIMARY KEY (domain, url);


--
-- Name: flogin_user pk_flogin_user; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY flogin_user
    ADD CONSTRAINT pk_flogin_user PRIMARY KEY (username);


--
-- Name: iplimit pk_iplimit; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY iplimit
    ADD CONSTRAINT pk_iplimit PRIMARY KEY (ip, name, priority);


--
-- Name: user_friends pk_user_friends; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY user_friends
    ADD CONSTRAINT pk_user_friends PRIMARY KEY (username, friend, host);


--
-- Name: virtual_user_list pk_virtual_user_list; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY virtual_user_list
    ADD CONSTRAINT pk_virtual_user_list PRIMARY KEY (real_user, virtual_user);


--
-- Name: mask_users pkmask_users_v2; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY mask_users
    ADD CONSTRAINT pkmask_users_v2 PRIMARY KEY (user_name, masked_user);


--
-- Name: privacy_default_list privacy_default_list_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY privacy_default_list
    ADD CONSTRAINT privacy_default_list_pkey PRIMARY KEY (username);


--
-- Name: privacy_list privacy_list_id_key; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY privacy_list
    ADD CONSTRAINT privacy_list_id_key UNIQUE (id);


--
-- Name: pubsub_node pubsub_node_nodeid_key; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY pubsub_node
    ADD CONSTRAINT pubsub_node_nodeid_key UNIQUE (nodeid);


--
-- Name: pubsub_state pubsub_state_stateid_key; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY pubsub_state
    ADD CONSTRAINT pubsub_state_stateid_key UNIQUE (stateid);


--
-- Name: qcloud_main_history qcloud_main_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qcloud_main_history
    ADD CONSTRAINT qcloud_main_history_pkey PRIMARY KEY (id);


--
-- Name: qcloud_main qcloud_main_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qcloud_main
    ADD CONSTRAINT qcloud_main_pkey PRIMARY KEY (id);


--
-- Name: qcloud_sub_history qcloud_sub_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qcloud_sub_history
    ADD CONSTRAINT qcloud_sub_history_pkey PRIMARY KEY (id);


--
-- Name: qcloud_sub qcloud_sub_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY qcloud_sub
    ADD CONSTRAINT qcloud_sub_pkey PRIMARY KEY (id);


--
-- Name: qtalk_user_comment qtalk_user_comment_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY qtalk_user_comment
    ADD CONSTRAINT qtalk_user_comment_pkey PRIMARY KEY (id);


--
-- Name: recv_msg_option recv_msg_option_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY recv_msg_option
    ADD CONSTRAINT recv_msg_option_pkey PRIMARY KEY (username);


--
-- Name: revoke_msg_history_backup revoke_msg_history_backup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY revoke_msg_history_backup
    ADD CONSTRAINT revoke_msg_history_backup_pkey PRIMARY KEY (id);


--
-- Name: revoke_msg_history revoke_msg_history_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY revoke_msg_history
    ADD CONSTRAINT revoke_msg_history_pkey PRIMARY KEY (id);


--
-- Name: robot_info robot_info_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY robot_info
    ADD CONSTRAINT robot_info_pkey PRIMARY KEY (en_name);


--
-- Name: robot_pubsub_backup robot_pubsub_backup_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY robot_pubsub_backup
    ADD CONSTRAINT robot_pubsub_backup_pkey PRIMARY KEY (rbt_name, user_name);


--
-- Name: robot_pubsub robot_pubsub_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY robot_pubsub
    ADD CONSTRAINT robot_pubsub_pkey PRIMARY KEY (rbt_name, user_name);


--
-- Name: roster_version roster_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY roster_version
    ADD CONSTRAINT roster_version_pkey PRIMARY KEY (username);


--
-- Name: s2s_mapped_host s2s_mapped_host_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY s2s_mapped_host
    ADD CONSTRAINT s2s_mapped_host_pkey PRIMARY KEY (domain, host);


--
-- Name: sms_log_info sms_log_info_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY sms_log_info
    ADD CONSTRAINT sms_log_info_pkey PRIMARY KEY (id);


--
-- Name: sms_request_info sms_request_info_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY sms_request_info
    ADD CONSTRAINT sms_request_info_pkey PRIMARY KEY (id);


--
-- Name: sms_user_info sms_user_info_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY sms_user_info
    ADD CONSTRAINT sms_user_info_pkey PRIMARY KEY (user_name);


--
-- Name: spool spool_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY spool
    ADD CONSTRAINT spool_pkey PRIMARY KEY (seq);


--
-- Name: user_block_list user_block_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY user_block_list
    ADD CONSTRAINT user_block_pkey PRIMARY KEY (username, blockuser);


--
-- Name: user_mac_key user_mac_key_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY user_mac_key
    ADD CONSTRAINT user_mac_key_pkey PRIMARY KEY (user_name, host, os);


--
-- Name: user_register_mucs_backup user_register_mucs_backup_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY user_register_mucs_backup
    ADD CONSTRAINT user_register_mucs_backup_pkey PRIMARY KEY (muc_name, username);


--
-- Name: user_register_mucs user_register_mucs_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY user_register_mucs
    ADD CONSTRAINT user_register_mucs_pkey PRIMARY KEY (muc_name, username);


--
-- Name: user_relation_opts user_relation_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY user_relation_opts
    ADD CONSTRAINT user_relation_pkey PRIMARY KEY (username);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: vcard vcard_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY vcard
    ADD CONSTRAINT vcard_pkey PRIMARY KEY (username);


--
-- Name: vcard_search vcard_search_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY vcard_search
    ADD CONSTRAINT vcard_search_pkey PRIMARY KEY (lusername);


--
-- Name: vcard_version vcard_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY vcard_version
    ADD CONSTRAINT vcard_version_pkey PRIMARY KEY (id);


--
-- Name: vcard_xupdate vcard_xupdate_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY vcard_xupdate
    ADD CONSTRAINT vcard_xupdate_pkey PRIMARY KEY (username);


--
-- Name: warn_msg_history_backup warn_msg_history_backup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY warn_msg_history_backup
    ADD CONSTRAINT warn_msg_history_backup_pkey PRIMARY KEY (id);


--
-- Name: warn_msg_history warn_msg_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY warn_msg_history
    ADD CONSTRAINT warn_msg_history_pkey PRIMARY KEY (id);


--
-- Name: white_list white_list_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY white_list
    ADD CONSTRAINT white_list_pkey PRIMARY KEY (username);


--
-- Name: win_dump_url win_dump_url_pkey; Type: CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY win_dump_url
    ADD CONSTRAINT win_dump_url_pkey PRIMARY KEY (user_name, dump_url);


--
-- Name: along_tmp_muc_name_username_date_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX along_tmp_muc_name_username_date_idx ON muc_room_users_backup USING btree (muc_name, username, date);


--
-- Name: along_tmp_muc_name_username_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX along_tmp_muc_name_username_idx ON muc_room_users_backup USING btree (muc_name, username);


--
-- Name: along_tmp_username_date_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX along_tmp_username_date_idx ON muc_room_users_backup USING btree (username, date);


--
-- Name: along_tmp_username_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX along_tmp_username_idx ON muc_room_users_backup USING btree (username);


--
-- Name: android_send_stat_uuid_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX android_send_stat_uuid_idx ON android_send_stat USING btree (uuid);


--
-- Name: destroy_muc_info_created_at_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX destroy_muc_info_created_at_idx ON destroy_muc_info USING btree (created_at);


--
-- Name: destroy_muc_info_muc_index; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX destroy_muc_info_muc_index ON destroy_muc_info USING btree (muc_name);


--
-- Name: destroy_muc_info_muc_name_created_at_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX destroy_muc_info_muc_name_created_at_idx ON destroy_muc_info USING btree (muc_name, created_at);


--
-- Name: destroy_muc_info_nick_name_created_at_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX destroy_muc_info_nick_name_created_at_idx ON destroy_muc_info USING btree (nick_name, created_at);


--
-- Name: destroy_muc_info_nick_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX destroy_muc_info_nick_name_idx ON destroy_muc_info USING btree (nick_name);


--
-- Name: group_extent_key_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX group_extent_key_idx ON group_extent USING btree (group_id, key);


--
-- Name: host_users_host_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX host_users_host_id_idx ON host_users USING btree (host_id);


--
-- Name: host_users_user_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX host_users_user_id_idx ON host_users USING btree (user_id);


--
-- Name: host_users_user_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX host_users_user_name_idx ON host_users USING btree (user_name);


--
-- Name: host_users_version_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX host_users_version_idx ON host_users USING btree (version);


--
-- Name: i_despool; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_despool ON spool USING btree (username);


--
-- Name: i_irc_custom_jid_host; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_irc_custom_jid_host ON irc_custom USING btree (jid, host);


--
-- Name: i_muc_registered_jid_host; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_muc_registered_jid_host ON muc_registered USING btree (jid, host);


--
-- Name: i_muc_registered_nick; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_muc_registered_nick ON muc_registered USING btree (nick);


--
-- Name: i_muc_room_history_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_muc_room_history_host_idx ON muc_room_history USING btree (host);


--
-- Name: i_muc_room_name_host; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_muc_room_name_host ON muc_room USING btree (name, host);


--
-- Name: i_privacy_list_username; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_privacy_list_username ON privacy_list USING btree (username);


--
-- Name: i_privacy_list_username_name; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_privacy_list_username_name ON privacy_list USING btree (username, name);


--
-- Name: i_private_storage_username; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_private_storage_username ON private_storage USING btree (username);


--
-- Name: i_private_storage_username_namespace; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_private_storage_username_namespace ON private_storage USING btree (username, namespace);


--
-- Name: i_pubsub_item_itemid; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_pubsub_item_itemid ON pubsub_item USING btree (itemid);


--
-- Name: i_pubsub_item_tuple; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_pubsub_item_tuple ON pubsub_item USING btree (nodeid, itemid);


--
-- Name: i_pubsub_node_option_nodeid; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_pubsub_node_option_nodeid ON pubsub_node_option USING btree (nodeid);


--
-- Name: i_pubsub_node_owner_nodeid; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_pubsub_node_owner_nodeid ON pubsub_node_owner USING btree (nodeid);


--
-- Name: i_pubsub_node_parent; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_pubsub_node_parent ON pubsub_node USING btree (parent);


--
-- Name: i_pubsub_node_tuple; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_pubsub_node_tuple ON pubsub_node USING btree (host, node);


--
-- Name: i_pubsub_state_jid; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_pubsub_state_jid ON pubsub_state USING btree (jid);


--
-- Name: i_pubsub_state_tuple; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_pubsub_state_tuple ON pubsub_state USING btree (nodeid, jid);


--
-- Name: i_pubsub_subscription_opt; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_pubsub_subscription_opt ON pubsub_subscription_opt USING btree (subid, opt_name);


--
-- Name: i_rosteru_jid; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_rosteru_jid ON rosterusers USING btree (jid);


--
-- Name: i_rosteru_user_jid; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_rosteru_user_jid ON rosterusers USING btree (username, jid);


--
-- Name: i_rosteru_username; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_rosteru_username ON rosterusers USING btree (username);


--
-- Name: i_sr_user_grp; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_sr_user_grp ON sr_user USING btree (grp);


--
-- Name: i_sr_user_jid; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_sr_user_jid ON sr_user USING btree (jid);


--
-- Name: i_sr_user_jid_grp; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX i_sr_user_jid_grp ON sr_user USING btree (jid, grp);


--
-- Name: i_user_register_mucs_user_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_user_register_mucs_user_idx ON user_register_mucs USING btree (username);


--
-- Name: i_vcard_search_lbday; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lbday ON vcard_search USING btree (lbday);


--
-- Name: i_vcard_search_lctry; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lctry ON vcard_search USING btree (lctry);


--
-- Name: i_vcard_search_lemail; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lemail ON vcard_search USING btree (lemail);


--
-- Name: i_vcard_search_lfamily; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lfamily ON vcard_search USING btree (lfamily);


--
-- Name: i_vcard_search_lfn; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lfn ON vcard_search USING btree (lfn);


--
-- Name: i_vcard_search_lgiven; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lgiven ON vcard_search USING btree (lgiven);


--
-- Name: i_vcard_search_llocality; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_llocality ON vcard_search USING btree (llocality);


--
-- Name: i_vcard_search_lmiddle; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lmiddle ON vcard_search USING btree (lmiddle);


--
-- Name: i_vcard_search_lnickname; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lnickname ON vcard_search USING btree (lnickname);


--
-- Name: i_vcard_search_lorgname; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lorgname ON vcard_search USING btree (lorgname);


--
-- Name: i_vcard_search_lorgunit; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX i_vcard_search_lorgunit ON vcard_search USING btree (lorgunit);


--
-- Name: index_cloud_id_user; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX index_cloud_id_user ON qcloud_main USING btree (q_user, id);


--
-- Name: index_cloud_sub_user_time; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX index_cloud_sub_user_time ON qcloud_sub USING btree (q_id, qs_time);


--
-- Name: index_cloud_sub_user_time_type; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX index_cloud_sub_user_time_type ON qcloud_sub USING btree (q_id, qs_time, qs_type);


--
-- Name: index_cloud_user_time; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX index_cloud_user_time ON qcloud_main USING btree (q_user, q_time);


--
-- Name: index_cloud_user_time_type; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX index_cloud_user_time_type ON qcloud_main USING btree (q_user, q_time, q_type);


--
-- Name: invite_spool_username_inviter_host_ihost_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX invite_spool_username_inviter_host_ihost_idx ON invite_spool USING btree (username, inviter, host, ihost);


--
-- Name: ix_mission_member_list; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX ix_mission_member_list ON mission_member USING btree (id, publisher);


--
-- Name: ix_user_name; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX ix_user_name ON test_user USING btree (name);


--
-- Name: mask_history_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_create_time_idx ON mask_history USING btree (create_time);


--
-- Name: mask_history_create_time_m_from_m_to_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_create_time_m_from_m_to_idx ON mask_history USING btree (create_time, m_from, m_to);


--
-- Name: mask_history_from_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_from_host_idx ON mask_history USING btree (from_host);


--
-- Name: mask_history_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX mask_history_id_idx ON mask_history USING btree (id);


--
-- Name: mask_history_m_from_from_host_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_m_from_from_host_create_time_idx ON mask_history USING btree (m_from, from_host, create_time);


--
-- Name: mask_history_m_from_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_m_from_idx ON mask_history USING btree (m_from);


--
-- Name: mask_history_m_from_m_to_create_time_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX mask_history_m_from_m_to_create_time_id_idx ON mask_history USING btree (m_from, m_to, create_time, id);


--
-- Name: mask_history_m_from_m_to_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_m_from_m_to_create_time_idx ON mask_history USING btree (m_from, m_to, create_time);


--
-- Name: mask_history_m_from_m_to_from_host_to_host_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_m_from_m_to_from_host_to_host_create_time_idx ON mask_history USING btree (m_from, m_to, from_host, to_host, create_time);


--
-- Name: mask_history_m_from_m_to_id_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX mask_history_m_from_m_to_id_create_time_idx ON mask_history USING btree (m_from, m_to, id, create_time);


--
-- Name: mask_history_m_from_m_to_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX mask_history_m_from_m_to_id_idx ON mask_history USING btree (m_from, m_to, id);


--
-- Name: mask_history_m_to_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_m_to_idx ON mask_history USING btree (m_to);


--
-- Name: mask_history_m_to_to_host_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_m_to_to_host_create_time_idx ON mask_history USING btree (m_to, to_host, create_time);


--
-- Name: mask_history_msg_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_msg_id_idx ON mask_history USING btree (msg_id);


--
-- Name: mask_history_read_flag_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mask_history_read_flag_idx ON mask_history USING btree (read_flag);


--
-- Name: mission_list_publisher; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX mission_list_publisher ON mission_list USING btree (publisher);


--
-- Name: msg_history_backup_tmp_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX msg_history_backup_tmp_create_time_idx ON msg_history_backup USING btree (create_time);


--
-- Name: msg_history_backup_tmp_create_time_m_from_from_host_m_to_to_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX msg_history_backup_tmp_create_time_m_from_from_host_m_to_to_idx ON msg_history_backup USING btree (create_time, m_from, from_host, m_to, to_host);


--
-- Name: msg_history_backup_tmp_create_time_m_from_m_to_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX msg_history_backup_tmp_create_time_m_from_m_to_idx ON msg_history_backup USING btree (create_time, m_from, m_to);


--
-- Name: msg_history_backup_tmp_m_from_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX msg_history_backup_tmp_m_from_idx ON msg_history_backup USING btree (m_from);


--
-- Name: msg_history_backup_tmp_m_from_m_to_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX msg_history_backup_tmp_m_from_m_to_create_time_idx ON msg_history_backup USING btree (m_from, m_to, create_time);


--
-- Name: msg_history_backup_tmp_m_from_m_to_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX msg_history_backup_tmp_m_from_m_to_id_idx ON msg_history_backup USING btree (m_from, m_to, id);


--
-- Name: msg_history_backup_tmp_m_to_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX msg_history_backup_tmp_m_to_idx ON msg_history_backup USING btree (m_to);


--
-- Name: msg_history_create_time_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_create_time_idx1 ON msg_history USING btree (create_time);


--
-- Name: msg_history_create_time_m_from_m_to_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_create_time_m_from_m_to_idx1 ON msg_history USING btree (create_time, m_from, m_to);


--
-- Name: msg_history_from_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_from_host_idx ON msg_history USING btree (from_host);


--
-- Name: msg_history_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX msg_history_id_idx ON msg_history USING btree (id);


--
-- Name: msg_history_m_from_from_host_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_m_from_from_host_create_time_idx ON msg_history USING btree (m_from, from_host, create_time);


--
-- Name: msg_history_m_from_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_m_from_idx ON msg_history USING btree (m_from);


--
-- Name: msg_history_m_from_m_to_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_m_from_m_to_create_time_idx ON msg_history USING btree (m_from, m_to, create_time);


--
-- Name: msg_history_m_from_m_to_from_host_to_host_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_m_from_m_to_from_host_to_host_create_time_idx ON msg_history USING btree (m_from, m_to, from_host, to_host, create_time);


--
-- Name: msg_history_m_from_m_to_id_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX msg_history_m_from_m_to_id_create_time_idx ON msg_history USING btree (m_from, m_to, id, create_time);


--
-- Name: msg_history_m_from_m_to_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX msg_history_m_from_m_to_id_idx ON msg_history USING btree (m_from, m_to, id);


--
-- Name: msg_history_m_to_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_m_to_idx ON msg_history USING btree (m_to);


--
-- Name: msg_history_m_to_to_host_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_m_to_to_host_create_time_idx ON msg_history USING btree (m_to, to_host, create_time);


--
-- Name: msg_history_msg_id_idx3; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX msg_history_msg_id_idx3 ON msg_history USING btree (msg_id);


--
-- Name: msg_history_read_flag_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX msg_history_read_flag_idx ON msg_history USING btree (read_flag);


--
-- Name: msg_stat_reportdate_m_from_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX msg_stat_reportdate_m_from_idx ON msg_stat USING btree (reportdate, m_from);


--
-- Name: msg_stat_reportdate_m_from_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX msg_stat_reportdate_m_from_idx1 ON msg_stat USING btree (reportdate, m_from) WHERE (flag = 'p2p'::text);


--
-- Name: msg_stat_reportdate_nickname_flag_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX msg_stat_reportdate_nickname_flag_idx ON msg_stat USING btree (reportdate, nickname, flag);


--
-- Name: msg_stat_reportdate_nickname_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX msg_stat_reportdate_nickname_idx ON msg_stat USING btree (reportdate, nickname) WHERE (flag = 'muc'::text);


--
-- Name: muc_room_backup_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_backup_host_idx ON muc_room_backup USING btree (host);


--
-- Name: muc_room_backup_name_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX muc_room_backup_name_host_idx ON muc_room_backup USING btree (name, host);


--
-- Name: muc_room_history_2016_muc_room_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX muc_room_history_2016_muc_room_name_idx ON muc_room_history_backup USING btree (muc_room_name);


--
-- Name: muc_room_history_backup_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX muc_room_history_backup_create_time_idx ON muc_room_history_backup USING btree (create_time);


--
-- Name: muc_room_history_backup_create_time_muc_room_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX muc_room_history_backup_create_time_muc_room_name_idx ON muc_room_history_backup USING btree (create_time, muc_room_name);


--
-- Name: muc_room_history_backup_create_time_nick_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX muc_room_history_backup_create_time_nick_idx ON muc_room_history_backup USING btree (create_time, nick);


--
-- Name: muc_room_history_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_history_create_time_idx ON muc_room_history USING btree (create_time);


--
-- Name: muc_room_history_create_time_msg_id_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_history_create_time_msg_id_idx ON muc_room_history USING btree (create_time, msg_id);


--
-- Name: muc_room_history_create_time_nick_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_history_create_time_nick_idx ON muc_room_history USING btree (create_time, nick);


--
-- Name: muc_room_history_msg_id_idx2; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX muc_room_history_msg_id_idx2 ON muc_room_history USING btree (msg_id);


--
-- Name: muc_room_history_muc_room_name_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_history_muc_room_name_create_time_idx ON muc_room_history USING btree (muc_room_name, create_time);


--
-- Name: muc_room_history_muc_room_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_history_muc_room_name_idx ON muc_room_history USING btree (muc_room_name);


--
-- Name: muc_room_history_nick_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_history_nick_idx ON muc_room_history USING btree (nick);


--
-- Name: muc_room_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_host_idx ON muc_room USING btree (host);


--
-- Name: muc_room_users_date_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_users_date_idx ON muc_room_users USING btree (date);


--
-- Name: muc_room_users_muc_name_username_date_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_users_muc_name_username_date_idx ON muc_room_users USING btree (muc_name, username, date);


--
-- Name: muc_room_users_muc_name_username_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX muc_room_users_muc_name_username_idx ON muc_room_users USING btree (muc_name, username);


--
-- Name: muc_room_users_username_date_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_users_username_date_idx ON muc_room_users USING btree (username, date);


--
-- Name: muc_room_users_username_host_date_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_users_username_host_date_idx ON muc_room_users USING btree (username, host, date);


--
-- Name: muc_room_users_username_host_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_users_username_host_idx1 ON muc_room_users USING btree (username, host);


--
-- Name: muc_room_users_username_host_muc_name_domain_date_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX muc_room_users_username_host_muc_name_domain_date_idx ON muc_room_users USING btree (username, host, muc_name, domain, date);


--
-- Name: muc_room_users_username_host_muc_name_domain_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX muc_room_users_username_host_muc_name_domain_idx ON muc_room_users USING btree (username, host, muc_name, domain);


--
-- Name: muc_room_users_username_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_room_users_username_idx ON muc_room_users USING btree (username);


--
-- Name: muc_spool_creaetd_at_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_spool_creaetd_at_idx ON muc_spool USING btree (created_at);


--
-- Name: muc_spool_created_at_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_spool_created_at_idx ON muc_spool USING btree (created_at) WHERE (send_flag = '1'::text);


--
-- Name: muc_spool_created_at_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_spool_created_at_idx1 ON muc_spool USING btree (created_at) WHERE (send_flag = '0'::text);


--
-- Name: muc_spool_send_flag_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_spool_send_flag_idx ON muc_spool USING btree (send_flag);


--
-- Name: muc_spool_username_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_spool_username_idx ON muc_spool USING btree (username);


--
-- Name: muc_user_mark_index; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX muc_user_mark_index ON muc_user_mark USING btree (muc_name, user_name);


--
-- Name: non_human_nickname_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX non_human_nickname_idx ON non_human USING btree (nickname);


--
-- Name: notice_history_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX notice_history_create_time_idx ON notice_history USING btree (create_time);


--
-- Name: notice_history_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX notice_history_host_idx ON notice_history USING btree (host);


--
-- Name: notice_history_m_from_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX notice_history_m_from_create_time_idx ON notice_history USING btree (m_from, create_time);


--
-- Name: notice_history_m_from_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX notice_history_m_from_idx ON notice_history USING btree (m_from);


--
-- Name: person_extent_2017_04_15_key_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX person_extent_2017_04_15_key_idx ON person_extent_2017_04_15 USING btree (owner, key);


--
-- Name: person_extent_2017_09_22_owner_key_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX person_extent_2017_09_22_owner_key_idx ON person_extent_2017_09_22 USING btree (owner, key);


--
-- Name: person_extent_owner_host_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX person_extent_owner_host_idx1 ON person_extent USING btree (owner, host);


--
-- Name: person_extent_owner_host_key_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX person_extent_owner_host_key_idx ON person_extent USING btree (owner, host, key);


--
-- Name: person_extent_owner_key_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX person_extent_owner_key_idx ON person_extent USING btree (owner, key);


--
-- Name: person_user_mac_key_user_name_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX person_user_mac_key_user_name_host_idx ON person_user_mac_key USING btree (user_name, host);


--
-- Name: person_user_mac_key_user_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX person_user_mac_key_user_name_idx ON person_user_mac_key USING btree (user_name);


--
-- Name: pk_rosterg_user_jid; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX pk_rosterg_user_jid ON rostergroups USING btree (username, jid);


--
-- Name: qcloud_main_history_q_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX qcloud_main_history_q_id_idx ON qcloud_main_history USING btree (q_id);


--
-- Name: qcloud_sub_history_qs_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX qcloud_sub_history_qs_id_idx ON qcloud_sub_history USING btree (qs_id);


--
-- Name: qcloud_sub_q_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX qcloud_sub_q_id_idx ON qcloud_sub USING btree (q_id);


--
-- Name: qtalk_user_comment_from_user_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX qtalk_user_comment_from_user_idx ON qtalk_user_comment USING btree (from_user);


--
-- Name: qtalk_user_comment_to_user_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX qtalk_user_comment_to_user_idx ON qtalk_user_comment USING btree (to_user);


--
-- Name: qtalk_user_comment_uniq_key; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX qtalk_user_comment_uniq_key ON qtalk_user_comment USING btree (from_user, to_user, qto_char(create_time, 'YYYY-WW'::text));


--
-- Name: revoke_msg_history_backup_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX revoke_msg_history_backup_create_time_idx ON revoke_msg_history_backup USING btree (create_time);


--
-- Name: revoke_msg_history_create_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX revoke_msg_history_create_time_idx ON revoke_msg_history USING btree (create_time);


--
-- Name: revoke_msg_history_msg_id_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX revoke_msg_history_msg_id_idx1 ON revoke_msg_history USING btree (msg_id);


--
-- Name: robot_info_cn_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX robot_info_cn_name_idx ON robot_info USING btree (cn_name);


--
-- Name: spool_crated_at_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX spool_crated_at_idx ON spool USING btree (created_at);


--
-- Name: spool_created_at_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX spool_created_at_idx ON spool USING btree (created_at) WHERE (send_flag = '1'::text);


--
-- Name: spool_created_at_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX spool_created_at_idx1 ON spool USING btree (created_at) WHERE (send_flag = '0'::text);


--
-- Name: spool_send_flag_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX spool_send_flag_idx ON spool USING btree (send_flag);


--
-- Name: uer_mac_key_user_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX uer_mac_key_user_name_idx ON user_mac_key USING btree (user_name);


--
-- Name: user_block_list_username_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_block_list_username_idx ON user_block_list USING btree (username);


--
-- Name: user_friends_username_userhost_friend_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX user_friends_username_userhost_friend_host_idx ON user_friends USING btree (username, userhost, friend, host);


--
-- Name: user_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_name_idx ON users USING btree (name);


--
-- Name: user_register_mucs_backup_created_at_username_registed_flag_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_backup_created_at_username_registed_flag_idx ON user_register_mucs_backup USING btree (created_at, username, registed_flag);


--
-- Name: user_register_mucs_backup_username_domain_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_backup_username_domain_idx ON user_register_mucs_backup USING btree (username, domain);


--
-- Name: user_register_mucs_backup_username_domain_muc_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_backup_username_domain_muc_name_idx ON user_register_mucs_backup USING btree (username, domain, muc_name);


--
-- Name: user_register_mucs_backup_username_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_backup_username_idx ON user_register_mucs_backup USING btree (username);


--
-- Name: user_register_mucs_backup_username_registed_flag_domain_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_backup_username_registed_flag_domain_idx ON user_register_mucs_backup USING btree (username, registed_flag, domain);


--
-- Name: user_register_mucs_created_at_username_registed_flag_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_created_at_username_registed_flag_idx ON user_register_mucs USING btree (created_at, username, registed_flag);


--
-- Name: user_register_mucs_username_domain_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_username_domain_idx ON user_register_mucs USING btree (username, domain);


--
-- Name: user_register_mucs_username_domain_muc_name_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_username_domain_muc_name_idx ON user_register_mucs USING btree (username, domain, muc_name);


--
-- Name: user_register_mucs_username_host_muc_name_domain_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX user_register_mucs_username_host_muc_name_domain_idx ON user_register_mucs USING btree (username, host, muc_name, domain);


--
-- Name: user_register_mucs_username_host_registed_flag_created_at_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_username_host_registed_flag_created_at_idx1 ON user_register_mucs USING btree (username, host, registed_flag, created_at);


--
-- Name: user_register_mucs_username_host_registed_flag_idx1; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_username_host_registed_flag_idx1 ON user_register_mucs USING btree (username, host, registed_flag);


--
-- Name: user_register_mucs_username_registed_flag_domain_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX user_register_mucs_username_registed_flag_domain_idx ON user_register_mucs USING btree (username, registed_flag, domain);


--
-- Name: users_name_hire_flag_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX users_name_hire_flag_idx ON users USING btree (name, hire_flag);


--
-- Name: users_username_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX users_username_idx ON users USING btree (username);


--
-- Name: vcard_version_username_host_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE UNIQUE INDEX vcard_version_username_host_idx ON vcard_version USING btree (username, host);


--
-- Name: warn_msg_history_backup_create_time_m_to_m_from_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_backup_create_time_m_to_m_from_idx ON warn_msg_history_backup USING btree (create_time, m_to, m_from);


--
-- Name: warn_msg_history_backup_create_time_m_to_to_host_m_from_fro_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_backup_create_time_m_to_to_host_m_from_fro_idx ON warn_msg_history_backup USING btree (create_time, m_to, to_host, m_from, from_host);


--
-- Name: warn_msg_history_backup_m_from_from_host_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_backup_m_from_from_host_create_time_idx ON warn_msg_history_backup USING btree (m_from, from_host, create_time);


--
-- Name: warn_msg_history_backup_m_from_m_to_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_backup_m_from_m_to_create_time_idx ON warn_msg_history_backup USING btree (m_from, m_to, create_time);


--
-- Name: warn_msg_history_backup_m_to_id_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX warn_msg_history_backup_m_to_id_create_time_idx ON warn_msg_history_backup USING btree (m_to, id, create_time) WHERE (((m_from)::text = 'qunar-message'::text) AND (from_host = 'ejabhost1'::text) AND (to_host = 'ejabhost1'::text));


--
-- Name: warn_msg_history_backup_m_to_id_create_time_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX warn_msg_history_backup_m_to_id_create_time_idx1 ON warn_msg_history_backup USING btree (m_to, id DESC, create_time);


--
-- Name: warn_msg_history_backup_m_to_to_host_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_backup_m_to_to_host_create_time_idx ON warn_msg_history_backup USING btree (m_to, to_host, create_time);


--
-- Name: warn_msg_history_backup_msg_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_backup_msg_id_idx ON warn_msg_history_backup USING btree (msg_id);


--
-- Name: warn_msg_history_create_time_m_to_m_from_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_create_time_m_to_m_from_idx ON warn_msg_history USING btree (create_time, m_to, m_from);


--
-- Name: warn_msg_history_create_time_m_to_to_host_m_from_from_host_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_create_time_m_to_to_host_m_from_from_host_idx ON warn_msg_history USING btree (create_time, m_to, to_host, m_from, from_host);


--
-- Name: warn_msg_history_m_from_from_host_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_m_from_from_host_create_time_idx ON warn_msg_history USING btree (m_from, from_host, create_time);


--
-- Name: warn_msg_history_m_from_m_to_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_m_from_m_to_create_time_idx ON warn_msg_history USING btree (m_from, m_to, create_time);


--
-- Name: warn_msg_history_m_to_id_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX warn_msg_history_m_to_id_create_time_idx ON warn_msg_history USING btree (m_to, id, create_time) WHERE (((m_from)::text = 'qunar-message'::text) AND (from_host = 'ejabhost1'::text) AND (to_host = 'ejabhost1'::text));


--
-- Name: warn_msg_history_m_to_id_create_time_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX warn_msg_history_m_to_id_create_time_idx1 ON warn_msg_history USING btree (m_to, id DESC, create_time);


--
-- Name: warn_msg_history_m_to_to_host_create_time_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX warn_msg_history_m_to_to_host_create_time_idx ON warn_msg_history USING btree (m_to, to_host, create_time);


--
-- Name: warn_msg_history_msg_id_idx2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX warn_msg_history_msg_id_idx2 ON warn_msg_history USING btree (msg_id);


--
-- Name: win_dump_url_dump_time_idx; Type: INDEX; Schema: public; Owner: ejabberd
--

CREATE INDEX win_dump_url_dump_time_idx ON win_dump_url USING btree (dump_time);


--
-- Name: privacy_list_data privacy_list_data_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY privacy_list_data
    ADD CONSTRAINT privacy_list_data_id_fkey FOREIGN KEY (id) REFERENCES privacy_list(id) ON DELETE CASCADE;


--
-- Name: pubsub_item pubsub_item_nodeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY pubsub_item
    ADD CONSTRAINT pubsub_item_nodeid_fkey FOREIGN KEY (nodeid) REFERENCES pubsub_node(nodeid) ON DELETE CASCADE;


--
-- Name: pubsub_node_option pubsub_node_option_nodeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY pubsub_node_option
    ADD CONSTRAINT pubsub_node_option_nodeid_fkey FOREIGN KEY (nodeid) REFERENCES pubsub_node(nodeid) ON DELETE CASCADE;


--
-- Name: pubsub_node_owner pubsub_node_owner_nodeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY pubsub_node_owner
    ADD CONSTRAINT pubsub_node_owner_nodeid_fkey FOREIGN KEY (nodeid) REFERENCES pubsub_node(nodeid) ON DELETE CASCADE;


--
-- Name: pubsub_state pubsub_state_nodeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ejabberd
--

ALTER TABLE ONLY pubsub_state
    ADD CONSTRAINT pubsub_state_nodeid_fkey FOREIGN KEY (nodeid) REFERENCES pubsub_node(nodeid) ON DELETE CASCADE;

