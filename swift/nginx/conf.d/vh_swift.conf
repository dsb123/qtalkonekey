    upstream stor_corp_001 {
        server <?qtalk swift>:8080;
    }

    server {
        listen       8088;
        #server_name  stor.corp.qunar.com;

        gzip on;
        gzip_min_length 1000;
        gzip_buffers    4 8k;
        gzip_types      text/plain application/x-javascript text/css application/xml;

        access_log   off;
        expires max;
        recursive_error_pages on;

        location ~ ^/(auth|v1)/(.*)$ {
            proxy_pass http://stor_corp_001;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            #proxy_set_header   X-Auth-Token  AUTH_tk2da5383d744b452aa85b67b4d220fff3;
        }

        location ~ ^/((.*)_r_(\d+)x(\d+))_([\da-z]+)\.(jpg|jpeg|gif|png)$ {
            set $my_uri $2;
            set $my_w $3;
            set $my_h $4;
            set $qunar_filter_uri /$1;
            set $qunar_filter_token $5;

            #access_by_lua '
            #    local req = "cbfd24c4138cd535" .. ngx.var.qunar_filter_uri .. "4e9448cdba967835";
            #    local valid = string.sub(ndk.set_var.set_md5(req), 0, 8);
            #    if valid == ngx.var.qunar_filter_token then
            #        return
            #    end
            #    ngx.exit(ngx.HTTP_FORBIDDEN)
            #';

            if ($request_method !~ (GET|HEAD)) {
                return 403;
            }

            proxy_pass  http://stor_corp_001/v1/AUTH_$my_uri;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            #proxy_set_header   X-Auth-Token  AUTH_tk2da5383d744b452aa85b67b4d220fff3;

            image_filter resize $my_w $my_h;
            image_filter_jpeg_quality 92;

            error_page   415 = /empty;
        }

        location ~ ^/((.*)_(\d+)x(\d+))_([\da-z]+)\.(jpg|jpeg|gif|png)$ {
            set $my_uri $2;
            set $my_w $3;
            set $my_h $4;
            set $qunar_filter_uri /$1;
            set $qunar_filter_token $5;

            #access_by_lua '
            #    local req = "cbfd24c4138cd535" .. ngx.var.qunar_filter_uri .. "4e9448cdba967835";
            #    local valid = string.sub(ndk.set_var.set_md5(req), 0, 8);
            #    if valid == ngx.var.qunar_filter_token then
            #        return
            #    end
            #    ngx.exit(ngx.HTTP_FORBIDDEN)
            #';

            if ($request_method !~ (GET|HEAD)) {
                return 403;
            }

            proxy_pass  http://stor_corp_001/v1/AUTH_$my_uri;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            #proxy_set_header   X-Auth-Token  AUTH_tk2da5383d744b452aa85b67b4d220fff3;

            image_filter crop $my_w $my_h;
            image_filter_jpeg_quality 92;

            error_page   415 = /empty;
        }


        location ~ ^/(.*)$ {
            set $my_uri $1;

            if ($request_method !~ (GET|HEAD)) {
                return 403;
            }

            proxy_pass  http://stor_corp_001/v1/AUTH_$my_uri;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            #proxy_set_header   X-Auth-Token  AUTH_tk2da5383d744b452aa85b67b4d220fff3;
        }

        location = /empty {
            empty_gif;
        }
        access_log /usr/local/openresty/nginx/logs/access.log;
    }
